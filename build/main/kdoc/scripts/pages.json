[{"name":"abstract class KInputStream(context: KnioContext) : KAutoCloseable","description":"org.knio.core.io.KInputStream","location":"knio-core/org.knio.core.io/-k-input-stream/index.html","searchKeys":["KInputStream","abstract class KInputStream(context: KnioContext) : KAutoCloseable","org.knio.core.io.KInputStream"]},{"name":"abstract class KOutputStream : KAutoCloseable","description":"org.knio.core.io.KOutputStream","location":"knio-core/org.knio.core.io/-k-output-stream/index.html","searchKeys":["KOutputStream","abstract class KOutputStream : KAutoCloseable","org.knio.core.io.KOutputStream"]},{"name":"abstract class KReader(context: KnioContext, lock: Mutex = Mutex()) : KAutoCloseable","description":"org.knio.core.io.KReader","location":"knio-core/org.knio.core.io/-k-reader/index.html","searchKeys":["KReader","abstract class KReader(context: KnioContext, lock: Mutex = Mutex()) : KAutoCloseable","org.knio.core.io.KReader"]},{"name":"abstract fun acquire(size: Int): ByteBuffer","description":"org.knio.core.context.ByteBufferPool.acquire","location":"knio-core/org.knio.core.context/-byte-buffer-pool/acquire.html","searchKeys":["acquire","abstract fun acquire(size: Int): ByteBuffer","org.knio.core.context.ByteBufferPool.acquire"]},{"name":"abstract fun openFileChannel(file: Path, vararg options: OpenOption): AsynchronousFileChannel","description":"org.knio.core.context.ChannelFactory.openFileChannel","location":"knio-core/org.knio.core.context/-channel-factory/open-file-channel.html","searchKeys":["openFileChannel","abstract fun openFileChannel(file: Path, vararg options: OpenOption): AsynchronousFileChannel","org.knio.core.context.ChannelFactory.openFileChannel"]},{"name":"abstract fun openServerSocketChannel(): AsynchronousServerSocketChannel","description":"org.knio.core.context.ChannelFactory.openServerSocketChannel","location":"knio-core/org.knio.core.context/-channel-factory/open-server-socket-channel.html","searchKeys":["openServerSocketChannel","abstract fun openServerSocketChannel(): AsynchronousServerSocketChannel","org.knio.core.context.ChannelFactory.openServerSocketChannel"]},{"name":"abstract fun openSocketChannel(): AsynchronousSocketChannel","description":"org.knio.core.context.ChannelFactory.openSocketChannel","location":"knio-core/org.knio.core.context/-channel-factory/open-socket-channel.html","searchKeys":["openSocketChannel","abstract fun openSocketChannel(): AsynchronousSocketChannel","org.knio.core.context.ChannelFactory.openSocketChannel"]},{"name":"abstract fun release(buffer: ByteBuffer)","description":"org.knio.core.context.ByteBufferPool.release","location":"knio-core/org.knio.core.context/-byte-buffer-pool/release.html","searchKeys":["release","abstract fun release(buffer: ByteBuffer)","org.knio.core.context.ByteBufferPool.release"]},{"name":"abstract fun shutdown()","description":"org.knio.core.context.ChannelFactory.shutdown","location":"knio-core/org.knio.core.context/-channel-factory/shutdown.html","searchKeys":["shutdown","abstract fun shutdown()","org.knio.core.context.ChannelFactory.shutdown"]},{"name":"abstract suspend fun accept(): KSocket","description":"org.knio.core.net.KServerSocket.accept","location":"knio-core/org.knio.core.net/-k-server-socket/accept.html","searchKeys":["accept","abstract suspend fun accept(): KSocket","org.knio.core.net.KServerSocket.accept"]},{"name":"abstract suspend fun addHandshakeCompletedListener(listener: KHandshakeCompletedListener)","description":"org.knio.core.net.ssl.KSSLSocket.addHandshakeCompletedListener","location":"knio-core/org.knio.core.net.ssl/-k-s-s-l-socket/add-handshake-completed-listener.html","searchKeys":["addHandshakeCompletedListener","abstract suspend fun addHandshakeCompletedListener(listener: KHandshakeCompletedListener)","org.knio.core.net.ssl.KSSLSocket.addHandshakeCompletedListener"]},{"name":"abstract suspend fun bind(endpoint: SocketAddress, backlog: Int = 0)","description":"org.knio.core.net.KServerSocket.bind","location":"knio-core/org.knio.core.net/-k-server-socket/bind.html","searchKeys":["bind","abstract suspend fun bind(endpoint: SocketAddress, backlog: Int = 0)","org.knio.core.net.KServerSocket.bind"]},{"name":"abstract suspend fun bind(local: SocketAddress?)","description":"org.knio.core.net.KSocket.bind","location":"knio-core/org.knio.core.net/-k-socket/bind.html","searchKeys":["bind","abstract suspend fun bind(local: SocketAddress?)","org.knio.core.net.KSocket.bind"]},{"name":"abstract suspend fun close()","description":"org.knio.core.lang.KAutoCloseable.close","location":"knio-core/org.knio.core.lang/-k-auto-closeable/close.html","searchKeys":["close","abstract suspend fun close()","org.knio.core.lang.KAutoCloseable.close"]},{"name":"abstract suspend fun connect(endpoint: SocketAddress, timeout: Long = 0)","description":"org.knio.core.net.KSocket.connect","location":"knio-core/org.knio.core.net/-k-socket/connect.html","searchKeys":["connect","abstract suspend fun connect(endpoint: SocketAddress, timeout: Long = 0)","org.knio.core.net.KSocket.connect"]},{"name":"abstract suspend fun createServerSocket(): KServerSocket","description":"org.knio.core.net.KServerSocketFactory.createServerSocket","location":"knio-core/org.knio.core.net/-k-server-socket-factory/create-server-socket.html","searchKeys":["createServerSocket","abstract suspend fun createServerSocket(): KServerSocket","org.knio.core.net.KServerSocketFactory.createServerSocket"]},{"name":"abstract suspend fun createServerSocket(port: Int): KServerSocket","description":"org.knio.core.net.KServerSocketFactory.createServerSocket","location":"knio-core/org.knio.core.net/-k-server-socket-factory/create-server-socket.html","searchKeys":["createServerSocket","abstract suspend fun createServerSocket(port: Int): KServerSocket","org.knio.core.net.KServerSocketFactory.createServerSocket"]},{"name":"abstract suspend fun createServerSocket(port: Int, backlog: Int): KServerSocket","description":"org.knio.core.net.KServerSocketFactory.createServerSocket","location":"knio-core/org.knio.core.net/-k-server-socket-factory/create-server-socket.html","searchKeys":["createServerSocket","abstract suspend fun createServerSocket(port: Int, backlog: Int): KServerSocket","org.knio.core.net.KServerSocketFactory.createServerSocket"]},{"name":"abstract suspend fun createServerSocket(port: Int, backlog: Int, ifAddress: InetAddress): KServerSocket","description":"org.knio.core.net.KServerSocketFactory.createServerSocket","location":"knio-core/org.knio.core.net/-k-server-socket-factory/create-server-socket.html","searchKeys":["createServerSocket","abstract suspend fun createServerSocket(port: Int, backlog: Int, ifAddress: InetAddress): KServerSocket","org.knio.core.net.KServerSocketFactory.createServerSocket"]},{"name":"abstract suspend fun createSocket(): KSocket","description":"org.knio.core.net.KSocketFactory.createSocket","location":"knio-core/org.knio.core.net/-k-socket-factory/create-socket.html","searchKeys":["createSocket","abstract suspend fun createSocket(): KSocket","org.knio.core.net.KSocketFactory.createSocket"]},{"name":"abstract suspend fun createSocket(address: InetAddress, port: Int, localAddress: InetAddress, localPort: Int): KSocket","description":"org.knio.core.net.KSocketFactory.createSocket","location":"knio-core/org.knio.core.net/-k-socket-factory/create-socket.html","searchKeys":["createSocket","abstract suspend fun createSocket(address: InetAddress, port: Int, localAddress: InetAddress, localPort: Int): KSocket","org.knio.core.net.KSocketFactory.createSocket"]},{"name":"abstract suspend fun createSocket(host: InetAddress, port: Int): KSocket","description":"org.knio.core.net.KSocketFactory.createSocket","location":"knio-core/org.knio.core.net/-k-socket-factory/create-socket.html","searchKeys":["createSocket","abstract suspend fun createSocket(host: InetAddress, port: Int): KSocket","org.knio.core.net.KSocketFactory.createSocket"]},{"name":"abstract suspend fun createSocket(host: String, port: Int): KSocket","description":"org.knio.core.net.KSocketFactory.createSocket","location":"knio-core/org.knio.core.net/-k-socket-factory/create-socket.html","searchKeys":["createSocket","abstract suspend fun createSocket(host: String, port: Int): KSocket","org.knio.core.net.KSocketFactory.createSocket"]},{"name":"abstract suspend fun createSocket(host: String, port: Int, localHost: InetAddress, localPort: Int): KSocket","description":"org.knio.core.net.KSocketFactory.createSocket","location":"knio-core/org.knio.core.net/-k-socket-factory/create-socket.html","searchKeys":["createSocket","abstract suspend fun createSocket(host: String, port: Int, localHost: InetAddress, localPort: Int): KSocket","org.knio.core.net.KSocketFactory.createSocket"]},{"name":"abstract suspend fun getAcceptTimeout(): Long","description":"org.knio.core.net.KServerSocket.getAcceptTimeout","location":"knio-core/org.knio.core.net/-k-server-socket/get-accept-timeout.html","searchKeys":["getAcceptTimeout","abstract suspend fun getAcceptTimeout(): Long","org.knio.core.net.KServerSocket.getAcceptTimeout"]},{"name":"abstract suspend fun getApplicationProtocol(): String?","description":"org.knio.core.net.ssl.KSSLSocket.getApplicationProtocol","location":"knio-core/org.knio.core.net.ssl/-k-s-s-l-socket/get-application-protocol.html","searchKeys":["getApplicationProtocol","abstract suspend fun getApplicationProtocol(): String?","org.knio.core.net.ssl.KSSLSocket.getApplicationProtocol"]},{"name":"abstract suspend fun getDefaultCipherSuites(): Array<String>","description":"org.knio.core.net.ssl.KSSLSocketFactory.getDefaultCipherSuites","location":"knio-core/org.knio.core.net.ssl/-k-s-s-l-socket-factory/get-default-cipher-suites.html","searchKeys":["getDefaultCipherSuites","abstract suspend fun getDefaultCipherSuites(): Array<String>","org.knio.core.net.ssl.KSSLSocketFactory.getDefaultCipherSuites"]},{"name":"abstract suspend fun getEnableSessionCreation(): Boolean","description":"org.knio.core.net.ssl.KSSLServerSocket.getEnableSessionCreation","location":"knio-core/org.knio.core.net.ssl/-k-s-s-l-server-socket/get-enable-session-creation.html","searchKeys":["getEnableSessionCreation","abstract suspend fun getEnableSessionCreation(): Boolean","org.knio.core.net.ssl.KSSLServerSocket.getEnableSessionCreation"]},{"name":"abstract suspend fun getEnableSessionCreation(): Boolean","description":"org.knio.core.net.ssl.KSSLSocket.getEnableSessionCreation","location":"knio-core/org.knio.core.net.ssl/-k-s-s-l-socket/get-enable-session-creation.html","searchKeys":["getEnableSessionCreation","abstract suspend fun getEnableSessionCreation(): Boolean","org.knio.core.net.ssl.KSSLSocket.getEnableSessionCreation"]},{"name":"abstract suspend fun getEnabledCipherSuites(): Array<String>","description":"org.knio.core.net.ssl.KSSLServerSocket.getEnabledCipherSuites","location":"knio-core/org.knio.core.net.ssl/-k-s-s-l-server-socket/get-enabled-cipher-suites.html","searchKeys":["getEnabledCipherSuites","abstract suspend fun getEnabledCipherSuites(): Array<String>","org.knio.core.net.ssl.KSSLServerSocket.getEnabledCipherSuites"]},{"name":"abstract suspend fun getEnabledCipherSuites(): Array<String>","description":"org.knio.core.net.ssl.KSSLSocket.getEnabledCipherSuites","location":"knio-core/org.knio.core.net.ssl/-k-s-s-l-socket/get-enabled-cipher-suites.html","searchKeys":["getEnabledCipherSuites","abstract suspend fun getEnabledCipherSuites(): Array<String>","org.knio.core.net.ssl.KSSLSocket.getEnabledCipherSuites"]},{"name":"abstract suspend fun getEnabledProtocols(): Array<String>","description":"org.knio.core.net.ssl.KSSLServerSocket.getEnabledProtocols","location":"knio-core/org.knio.core.net.ssl/-k-s-s-l-server-socket/get-enabled-protocols.html","searchKeys":["getEnabledProtocols","abstract suspend fun getEnabledProtocols(): Array<String>","org.knio.core.net.ssl.KSSLServerSocket.getEnabledProtocols"]},{"name":"abstract suspend fun getEnabledProtocols(): Array<String>","description":"org.knio.core.net.ssl.KSSLSocket.getEnabledProtocols","location":"knio-core/org.knio.core.net.ssl/-k-s-s-l-socket/get-enabled-protocols.html","searchKeys":["getEnabledProtocols","abstract suspend fun getEnabledProtocols(): Array<String>","org.knio.core.net.ssl.KSSLSocket.getEnabledProtocols"]},{"name":"abstract suspend fun getHandshakeApplicationProtocol(): String?","description":"org.knio.core.net.ssl.KSSLSocket.getHandshakeApplicationProtocol","location":"knio-core/org.knio.core.net.ssl/-k-s-s-l-socket/get-handshake-application-protocol.html","searchKeys":["getHandshakeApplicationProtocol","abstract suspend fun getHandshakeApplicationProtocol(): String?","org.knio.core.net.ssl.KSSLSocket.getHandshakeApplicationProtocol"]},{"name":"abstract suspend fun getHandshakeApplicationProtocolSelector(): BiFunction<KSSLSocket, List<String>, String?>?","description":"org.knio.core.net.ssl.KSSLSocket.getHandshakeApplicationProtocolSelector","location":"knio-core/org.knio.core.net.ssl/-k-s-s-l-socket/get-handshake-application-protocol-selector.html","searchKeys":["getHandshakeApplicationProtocolSelector","abstract suspend fun getHandshakeApplicationProtocolSelector(): BiFunction<KSSLSocket, List<String>, String?>?","org.knio.core.net.ssl.KSSLSocket.getHandshakeApplicationProtocolSelector"]},{"name":"abstract suspend fun getHandshakeSession(): SSLSession?","description":"org.knio.core.net.ssl.KSSLSocket.getHandshakeSession","location":"knio-core/org.knio.core.net.ssl/-k-s-s-l-socket/get-handshake-session.html","searchKeys":["getHandshakeSession","abstract suspend fun getHandshakeSession(): SSLSession?","org.knio.core.net.ssl.KSSLSocket.getHandshakeSession"]},{"name":"abstract suspend fun getInetAddress(): InetAddress?","description":"org.knio.core.net.KServerSocket.getInetAddress","location":"knio-core/org.knio.core.net/-k-server-socket/get-inet-address.html","searchKeys":["getInetAddress","abstract suspend fun getInetAddress(): InetAddress?","org.knio.core.net.KServerSocket.getInetAddress"]},{"name":"abstract suspend fun getInetAddress(): InetAddress?","description":"org.knio.core.net.KSocket.getInetAddress","location":"knio-core/org.knio.core.net/-k-socket/get-inet-address.html","searchKeys":["getInetAddress","abstract suspend fun getInetAddress(): InetAddress?","org.knio.core.net.KSocket.getInetAddress"]},{"name":"abstract suspend fun getInputStream(): KInputStream","description":"org.knio.core.net.KSocket.getInputStream","location":"knio-core/org.knio.core.net/-k-socket/get-input-stream.html","searchKeys":["getInputStream","abstract suspend fun getInputStream(): KInputStream","org.knio.core.net.KSocket.getInputStream"]},{"name":"abstract suspend fun getKeepAlive(): Boolean","description":"org.knio.core.net.KSocket.getKeepAlive","location":"knio-core/org.knio.core.net/-k-socket/get-keep-alive.html","searchKeys":["getKeepAlive","abstract suspend fun getKeepAlive(): Boolean","org.knio.core.net.KSocket.getKeepAlive"]},{"name":"abstract suspend fun getLocalAddress(): InetAddress","description":"org.knio.core.net.KSocket.getLocalAddress","location":"knio-core/org.knio.core.net/-k-socket/get-local-address.html","searchKeys":["getLocalAddress","abstract suspend fun getLocalAddress(): InetAddress","org.knio.core.net.KSocket.getLocalAddress"]},{"name":"abstract suspend fun getLocalPort(): Int","description":"org.knio.core.net.KServerSocket.getLocalPort","location":"knio-core/org.knio.core.net/-k-server-socket/get-local-port.html","searchKeys":["getLocalPort","abstract suspend fun getLocalPort(): Int","org.knio.core.net.KServerSocket.getLocalPort"]},{"name":"abstract suspend fun getLocalPort(): Int","description":"org.knio.core.net.KSocket.getLocalPort","location":"knio-core/org.knio.core.net/-k-socket/get-local-port.html","searchKeys":["getLocalPort","abstract suspend fun getLocalPort(): Int","org.knio.core.net.KSocket.getLocalPort"]},{"name":"abstract suspend fun getLocalSocketAddress(): SocketAddress?","description":"org.knio.core.net.KServerSocket.getLocalSocketAddress","location":"knio-core/org.knio.core.net/-k-server-socket/get-local-socket-address.html","searchKeys":["getLocalSocketAddress","abstract suspend fun getLocalSocketAddress(): SocketAddress?","org.knio.core.net.KServerSocket.getLocalSocketAddress"]},{"name":"abstract suspend fun getLocalSocketAddress(): SocketAddress?","description":"org.knio.core.net.KSocket.getLocalSocketAddress","location":"knio-core/org.knio.core.net/-k-socket/get-local-socket-address.html","searchKeys":["getLocalSocketAddress","abstract suspend fun getLocalSocketAddress(): SocketAddress?","org.knio.core.net.KSocket.getLocalSocketAddress"]},{"name":"abstract suspend fun getNeedClientAuth(): Boolean","description":"org.knio.core.net.ssl.KSSLServerSocket.getNeedClientAuth","location":"knio-core/org.knio.core.net.ssl/-k-s-s-l-server-socket/get-need-client-auth.html","searchKeys":["getNeedClientAuth","abstract suspend fun getNeedClientAuth(): Boolean","org.knio.core.net.ssl.KSSLServerSocket.getNeedClientAuth"]},{"name":"abstract suspend fun getNeedClientAuth(): Boolean","description":"org.knio.core.net.ssl.KSSLSocket.getNeedClientAuth","location":"knio-core/org.knio.core.net.ssl/-k-s-s-l-socket/get-need-client-auth.html","searchKeys":["getNeedClientAuth","abstract suspend fun getNeedClientAuth(): Boolean","org.knio.core.net.ssl.KSSLSocket.getNeedClientAuth"]},{"name":"abstract suspend fun getOutputStream(): KOutputStream","description":"org.knio.core.net.KSocket.getOutputStream","location":"knio-core/org.knio.core.net/-k-socket/get-output-stream.html","searchKeys":["getOutputStream","abstract suspend fun getOutputStream(): KOutputStream","org.knio.core.net.KSocket.getOutputStream"]},{"name":"abstract suspend fun getPort(): Int","description":"org.knio.core.net.KSocket.getPort","location":"knio-core/org.knio.core.net/-k-socket/get-port.html","searchKeys":["getPort","abstract suspend fun getPort(): Int","org.knio.core.net.KSocket.getPort"]},{"name":"abstract suspend fun getReadTimeout(): Long","description":"org.knio.core.net.KSocket.getReadTimeout","location":"knio-core/org.knio.core.net/-k-socket/get-read-timeout.html","searchKeys":["getReadTimeout","abstract suspend fun getReadTimeout(): Long","org.knio.core.net.KSocket.getReadTimeout"]},{"name":"abstract suspend fun getReceiveBufferSize(): Int","description":"org.knio.core.net.KServerSocket.getReceiveBufferSize","location":"knio-core/org.knio.core.net/-k-server-socket/get-receive-buffer-size.html","searchKeys":["getReceiveBufferSize","abstract suspend fun getReceiveBufferSize(): Int","org.knio.core.net.KServerSocket.getReceiveBufferSize"]},{"name":"abstract suspend fun getReceiveBufferSize(): Int","description":"org.knio.core.net.KSocket.getReceiveBufferSize","location":"knio-core/org.knio.core.net/-k-socket/get-receive-buffer-size.html","searchKeys":["getReceiveBufferSize","abstract suspend fun getReceiveBufferSize(): Int","org.knio.core.net.KSocket.getReceiveBufferSize"]},{"name":"abstract suspend fun getRemoteSocketAddress(): SocketAddress?","description":"org.knio.core.net.KSocket.getRemoteSocketAddress","location":"knio-core/org.knio.core.net/-k-socket/get-remote-socket-address.html","searchKeys":["getRemoteSocketAddress","abstract suspend fun getRemoteSocketAddress(): SocketAddress?","org.knio.core.net.KSocket.getRemoteSocketAddress"]},{"name":"abstract suspend fun getReuseAddress(): Boolean","description":"org.knio.core.net.KServerSocket.getReuseAddress","location":"knio-core/org.knio.core.net/-k-server-socket/get-reuse-address.html","searchKeys":["getReuseAddress","abstract suspend fun getReuseAddress(): Boolean","org.knio.core.net.KServerSocket.getReuseAddress"]},{"name":"abstract suspend fun getReuseAddress(): Boolean","description":"org.knio.core.net.KSocket.getReuseAddress","location":"knio-core/org.knio.core.net/-k-socket/get-reuse-address.html","searchKeys":["getReuseAddress","abstract suspend fun getReuseAddress(): Boolean","org.knio.core.net.KSocket.getReuseAddress"]},{"name":"abstract suspend fun getSSLParameters(): SSLParameters","description":"org.knio.core.net.ssl.KSSLServerSocket.getSSLParameters","location":"knio-core/org.knio.core.net.ssl/-k-s-s-l-server-socket/get-s-s-l-parameters.html","searchKeys":["getSSLParameters","abstract suspend fun getSSLParameters(): SSLParameters","org.knio.core.net.ssl.KSSLServerSocket.getSSLParameters"]},{"name":"abstract suspend fun getSSLParameters(): SSLParameters","description":"org.knio.core.net.ssl.KSSLSocket.getSSLParameters","location":"knio-core/org.knio.core.net.ssl/-k-s-s-l-socket/get-s-s-l-parameters.html","searchKeys":["getSSLParameters","abstract suspend fun getSSLParameters(): SSLParameters","org.knio.core.net.ssl.KSSLSocket.getSSLParameters"]},{"name":"abstract suspend fun getSendBufferSize(): Int","description":"org.knio.core.net.KSocket.getSendBufferSize","location":"knio-core/org.knio.core.net/-k-socket/get-send-buffer-size.html","searchKeys":["getSendBufferSize","abstract suspend fun getSendBufferSize(): Int","org.knio.core.net.KSocket.getSendBufferSize"]},{"name":"abstract suspend fun getSession(): SSLSession","description":"org.knio.core.net.ssl.KSSLSocket.getSession","location":"knio-core/org.knio.core.net.ssl/-k-s-s-l-socket/get-session.html","searchKeys":["getSession","abstract suspend fun getSession(): SSLSession","org.knio.core.net.ssl.KSSLSocket.getSession"]},{"name":"abstract suspend fun getSupportedCipherSuites(): Array<String>","description":"org.knio.core.net.ssl.KSSLServerSocket.getSupportedCipherSuites","location":"knio-core/org.knio.core.net.ssl/-k-s-s-l-server-socket/get-supported-cipher-suites.html","searchKeys":["getSupportedCipherSuites","abstract suspend fun getSupportedCipherSuites(): Array<String>","org.knio.core.net.ssl.KSSLServerSocket.getSupportedCipherSuites"]},{"name":"abstract suspend fun getSupportedCipherSuites(): Array<String>","description":"org.knio.core.net.ssl.KSSLSocket.getSupportedCipherSuites","location":"knio-core/org.knio.core.net.ssl/-k-s-s-l-socket/get-supported-cipher-suites.html","searchKeys":["getSupportedCipherSuites","abstract suspend fun getSupportedCipherSuites(): Array<String>","org.knio.core.net.ssl.KSSLSocket.getSupportedCipherSuites"]},{"name":"abstract suspend fun getSupportedCipherSuites(): Array<String>","description":"org.knio.core.net.ssl.KSSLSocketFactory.getSupportedCipherSuites","location":"knio-core/org.knio.core.net.ssl/-k-s-s-l-socket-factory/get-supported-cipher-suites.html","searchKeys":["getSupportedCipherSuites","abstract suspend fun getSupportedCipherSuites(): Array<String>","org.knio.core.net.ssl.KSSLSocketFactory.getSupportedCipherSuites"]},{"name":"abstract suspend fun getSupportedProtocols(): Array<String>","description":"org.knio.core.net.ssl.KSSLServerSocket.getSupportedProtocols","location":"knio-core/org.knio.core.net.ssl/-k-s-s-l-server-socket/get-supported-protocols.html","searchKeys":["getSupportedProtocols","abstract suspend fun getSupportedProtocols(): Array<String>","org.knio.core.net.ssl.KSSLServerSocket.getSupportedProtocols"]},{"name":"abstract suspend fun getSupportedProtocols(): Array<String>","description":"org.knio.core.net.ssl.KSSLSocket.getSupportedProtocols","location":"knio-core/org.knio.core.net.ssl/-k-s-s-l-socket/get-supported-protocols.html","searchKeys":["getSupportedProtocols","abstract suspend fun getSupportedProtocols(): Array<String>","org.knio.core.net.ssl.KSSLSocket.getSupportedProtocols"]},{"name":"abstract suspend fun getTcpNoDelay(): Boolean","description":"org.knio.core.net.KSocket.getTcpNoDelay","location":"knio-core/org.knio.core.net/-k-socket/get-tcp-no-delay.html","searchKeys":["getTcpNoDelay","abstract suspend fun getTcpNoDelay(): Boolean","org.knio.core.net.KSocket.getTcpNoDelay"]},{"name":"abstract suspend fun getUseClientMode(): Boolean","description":"org.knio.core.net.ssl.KSSLServerSocket.getUseClientMode","location":"knio-core/org.knio.core.net.ssl/-k-s-s-l-server-socket/get-use-client-mode.html","searchKeys":["getUseClientMode","abstract suspend fun getUseClientMode(): Boolean","org.knio.core.net.ssl.KSSLServerSocket.getUseClientMode"]},{"name":"abstract suspend fun getUseClientMode(): Boolean","description":"org.knio.core.net.ssl.KSSLSocket.getUseClientMode","location":"knio-core/org.knio.core.net.ssl/-k-s-s-l-socket/get-use-client-mode.html","searchKeys":["getUseClientMode","abstract suspend fun getUseClientMode(): Boolean","org.knio.core.net.ssl.KSSLSocket.getUseClientMode"]},{"name":"abstract suspend fun getWantClientAuth(): Boolean","description":"org.knio.core.net.ssl.KSSLServerSocket.getWantClientAuth","location":"knio-core/org.knio.core.net.ssl/-k-s-s-l-server-socket/get-want-client-auth.html","searchKeys":["getWantClientAuth","abstract suspend fun getWantClientAuth(): Boolean","org.knio.core.net.ssl.KSSLServerSocket.getWantClientAuth"]},{"name":"abstract suspend fun getWantClientAuth(): Boolean","description":"org.knio.core.net.ssl.KSSLSocket.getWantClientAuth","location":"knio-core/org.knio.core.net.ssl/-k-s-s-l-socket/get-want-client-auth.html","searchKeys":["getWantClientAuth","abstract suspend fun getWantClientAuth(): Boolean","org.knio.core.net.ssl.KSSLSocket.getWantClientAuth"]},{"name":"abstract suspend fun getWriteTimeout(): Long","description":"org.knio.core.net.KSocket.getWriteTimeout","location":"knio-core/org.knio.core.net/-k-socket/get-write-timeout.html","searchKeys":["getWriteTimeout","abstract suspend fun getWriteTimeout(): Long","org.knio.core.net.KSocket.getWriteTimeout"]},{"name":"abstract suspend fun handshakeCompleted(event: KHandshakeCompletedEvent)","description":"org.knio.core.net.ssl.KHandshakeCompletedListener.handshakeCompleted","location":"knio-core/org.knio.core.net.ssl/-k-handshake-completed-listener/handshake-completed.html","searchKeys":["handshakeCompleted","abstract suspend fun handshakeCompleted(event: KHandshakeCompletedEvent)","org.knio.core.net.ssl.KHandshakeCompletedListener.handshakeCompleted"]},{"name":"abstract suspend fun isBound(): Boolean","description":"org.knio.core.net.KServerSocket.isBound","location":"knio-core/org.knio.core.net/-k-server-socket/is-bound.html","searchKeys":["isBound","abstract suspend fun isBound(): Boolean","org.knio.core.net.KServerSocket.isBound"]},{"name":"abstract suspend fun isBound(): Boolean","description":"org.knio.core.net.KSocket.isBound","location":"knio-core/org.knio.core.net/-k-socket/is-bound.html","searchKeys":["isBound","abstract suspend fun isBound(): Boolean","org.knio.core.net.KSocket.isBound"]},{"name":"abstract suspend fun isClosed(): Boolean","description":"org.knio.core.net.KServerSocket.isClosed","location":"knio-core/org.knio.core.net/-k-server-socket/is-closed.html","searchKeys":["isClosed","abstract suspend fun isClosed(): Boolean","org.knio.core.net.KServerSocket.isClosed"]},{"name":"abstract suspend fun isClosed(): Boolean","description":"org.knio.core.net.KSocket.isClosed","location":"knio-core/org.knio.core.net/-k-socket/is-closed.html","searchKeys":["isClosed","abstract suspend fun isClosed(): Boolean","org.knio.core.net.KSocket.isClosed"]},{"name":"abstract suspend fun isConnected(): Boolean","description":"org.knio.core.net.KSocket.isConnected","location":"knio-core/org.knio.core.net/-k-socket/is-connected.html","searchKeys":["isConnected","abstract suspend fun isConnected(): Boolean","org.knio.core.net.KSocket.isConnected"]},{"name":"abstract suspend fun isInputShutdown(): Boolean","description":"org.knio.core.net.KSocket.isInputShutdown","location":"knio-core/org.knio.core.net/-k-socket/is-input-shutdown.html","searchKeys":["isInputShutdown","abstract suspend fun isInputShutdown(): Boolean","org.knio.core.net.KSocket.isInputShutdown"]},{"name":"abstract suspend fun isOutputShutdown(): Boolean","description":"org.knio.core.net.KSocket.isOutputShutdown","location":"knio-core/org.knio.core.net/-k-socket/is-output-shutdown.html","searchKeys":["isOutputShutdown","abstract suspend fun isOutputShutdown(): Boolean","org.knio.core.net.KSocket.isOutputShutdown"]},{"name":"abstract suspend fun read(b: ByteBuffer): Int","description":"org.knio.core.io.KInputStream.read","location":"knio-core/org.knio.core.io/-k-input-stream/read.html","searchKeys":["read","abstract suspend fun read(b: ByteBuffer): Int","org.knio.core.io.KInputStream.read"]},{"name":"abstract suspend fun read(b: CharBuffer): Int","description":"org.knio.core.io.KReader.read","location":"knio-core/org.knio.core.io/-k-reader/read.html","searchKeys":["read","abstract suspend fun read(b: CharBuffer): Int","org.knio.core.io.KReader.read"]},{"name":"abstract suspend fun removeHandshakeCompletedListener(listener: KHandshakeCompletedListener)","description":"org.knio.core.net.ssl.KSSLSocket.removeHandshakeCompletedListener","location":"knio-core/org.knio.core.net.ssl/-k-s-s-l-socket/remove-handshake-completed-listener.html","searchKeys":["removeHandshakeCompletedListener","abstract suspend fun removeHandshakeCompletedListener(listener: KHandshakeCompletedListener)","org.knio.core.net.ssl.KSSLSocket.removeHandshakeCompletedListener"]},{"name":"abstract suspend fun setAcceptTimeout(timeout: Long)","description":"org.knio.core.net.KServerSocket.setAcceptTimeout","location":"knio-core/org.knio.core.net/-k-server-socket/set-accept-timeout.html","searchKeys":["setAcceptTimeout","abstract suspend fun setAcceptTimeout(timeout: Long)","org.knio.core.net.KServerSocket.setAcceptTimeout"]},{"name":"abstract suspend fun setEnableSessionCreation(flag: Boolean)","description":"org.knio.core.net.ssl.KSSLServerSocket.setEnableSessionCreation","location":"knio-core/org.knio.core.net.ssl/-k-s-s-l-server-socket/set-enable-session-creation.html","searchKeys":["setEnableSessionCreation","abstract suspend fun setEnableSessionCreation(flag: Boolean)","org.knio.core.net.ssl.KSSLServerSocket.setEnableSessionCreation"]},{"name":"abstract suspend fun setEnableSessionCreation(flag: Boolean)","description":"org.knio.core.net.ssl.KSSLSocket.setEnableSessionCreation","location":"knio-core/org.knio.core.net.ssl/-k-s-s-l-socket/set-enable-session-creation.html","searchKeys":["setEnableSessionCreation","abstract suspend fun setEnableSessionCreation(flag: Boolean)","org.knio.core.net.ssl.KSSLSocket.setEnableSessionCreation"]},{"name":"abstract suspend fun setEnabledCipherSuites(suites: Array<String>)","description":"org.knio.core.net.ssl.KSSLServerSocket.setEnabledCipherSuites","location":"knio-core/org.knio.core.net.ssl/-k-s-s-l-server-socket/set-enabled-cipher-suites.html","searchKeys":["setEnabledCipherSuites","abstract suspend fun setEnabledCipherSuites(suites: Array<String>)","org.knio.core.net.ssl.KSSLServerSocket.setEnabledCipherSuites"]},{"name":"abstract suspend fun setEnabledCipherSuites(suites: Array<String>)","description":"org.knio.core.net.ssl.KSSLSocket.setEnabledCipherSuites","location":"knio-core/org.knio.core.net.ssl/-k-s-s-l-socket/set-enabled-cipher-suites.html","searchKeys":["setEnabledCipherSuites","abstract suspend fun setEnabledCipherSuites(suites: Array<String>)","org.knio.core.net.ssl.KSSLSocket.setEnabledCipherSuites"]},{"name":"abstract suspend fun setEnabledProtocols(protocols: Array<String>)","description":"org.knio.core.net.ssl.KSSLServerSocket.setEnabledProtocols","location":"knio-core/org.knio.core.net.ssl/-k-s-s-l-server-socket/set-enabled-protocols.html","searchKeys":["setEnabledProtocols","abstract suspend fun setEnabledProtocols(protocols: Array<String>)","org.knio.core.net.ssl.KSSLServerSocket.setEnabledProtocols"]},{"name":"abstract suspend fun setEnabledProtocols(protocols: Array<String>)","description":"org.knio.core.net.ssl.KSSLSocket.setEnabledProtocols","location":"knio-core/org.knio.core.net.ssl/-k-s-s-l-socket/set-enabled-protocols.html","searchKeys":["setEnabledProtocols","abstract suspend fun setEnabledProtocols(protocols: Array<String>)","org.knio.core.net.ssl.KSSLSocket.setEnabledProtocols"]},{"name":"abstract suspend fun setHandshakeApplicationProtocolSelector(selector: BiFunction<KSSLSocket, List<String>, String?>?)","description":"org.knio.core.net.ssl.KSSLSocket.setHandshakeApplicationProtocolSelector","location":"knio-core/org.knio.core.net.ssl/-k-s-s-l-socket/set-handshake-application-protocol-selector.html","searchKeys":["setHandshakeApplicationProtocolSelector","abstract suspend fun setHandshakeApplicationProtocolSelector(selector: BiFunction<KSSLSocket, List<String>, String?>?)","org.knio.core.net.ssl.KSSLSocket.setHandshakeApplicationProtocolSelector"]},{"name":"abstract suspend fun setKeepAlive(keepAlive: Boolean)","description":"org.knio.core.net.KSocket.setKeepAlive","location":"knio-core/org.knio.core.net/-k-socket/set-keep-alive.html","searchKeys":["setKeepAlive","abstract suspend fun setKeepAlive(keepAlive: Boolean)","org.knio.core.net.KSocket.setKeepAlive"]},{"name":"abstract suspend fun setNeedClientAuth(need: Boolean)","description":"org.knio.core.net.ssl.KSSLServerSocket.setNeedClientAuth","location":"knio-core/org.knio.core.net.ssl/-k-s-s-l-server-socket/set-need-client-auth.html","searchKeys":["setNeedClientAuth","abstract suspend fun setNeedClientAuth(need: Boolean)","org.knio.core.net.ssl.KSSLServerSocket.setNeedClientAuth"]},{"name":"abstract suspend fun setNeedClientAuth(need: Boolean)","description":"org.knio.core.net.ssl.KSSLSocket.setNeedClientAuth","location":"knio-core/org.knio.core.net.ssl/-k-s-s-l-socket/set-need-client-auth.html","searchKeys":["setNeedClientAuth","abstract suspend fun setNeedClientAuth(need: Boolean)","org.knio.core.net.ssl.KSSLSocket.setNeedClientAuth"]},{"name":"abstract suspend fun setReadTimeout(timeout: Long?)","description":"org.knio.core.net.KSocket.setReadTimeout","location":"knio-core/org.knio.core.net/-k-socket/set-read-timeout.html","searchKeys":["setReadTimeout","abstract suspend fun setReadTimeout(timeout: Long?)","org.knio.core.net.KSocket.setReadTimeout"]},{"name":"abstract suspend fun setReceiveBufferSize(size: Int)","description":"org.knio.core.net.KServerSocket.setReceiveBufferSize","location":"knio-core/org.knio.core.net/-k-server-socket/set-receive-buffer-size.html","searchKeys":["setReceiveBufferSize","abstract suspend fun setReceiveBufferSize(size: Int)","org.knio.core.net.KServerSocket.setReceiveBufferSize"]},{"name":"abstract suspend fun setReceiveBufferSize(size: Int)","description":"org.knio.core.net.KSocket.setReceiveBufferSize","location":"knio-core/org.knio.core.net/-k-socket/set-receive-buffer-size.html","searchKeys":["setReceiveBufferSize","abstract suspend fun setReceiveBufferSize(size: Int)","org.knio.core.net.KSocket.setReceiveBufferSize"]},{"name":"abstract suspend fun setReuseAddress(on: Boolean)","description":"org.knio.core.net.KServerSocket.setReuseAddress","location":"knio-core/org.knio.core.net/-k-server-socket/set-reuse-address.html","searchKeys":["setReuseAddress","abstract suspend fun setReuseAddress(on: Boolean)","org.knio.core.net.KServerSocket.setReuseAddress"]},{"name":"abstract suspend fun setReuseAddress(reuse: Boolean)","description":"org.knio.core.net.KSocket.setReuseAddress","location":"knio-core/org.knio.core.net/-k-socket/set-reuse-address.html","searchKeys":["setReuseAddress","abstract suspend fun setReuseAddress(reuse: Boolean)","org.knio.core.net.KSocket.setReuseAddress"]},{"name":"abstract suspend fun setSSLParameters(params: SSLParameters)","description":"org.knio.core.net.ssl.KSSLServerSocket.setSSLParameters","location":"knio-core/org.knio.core.net.ssl/-k-s-s-l-server-socket/set-s-s-l-parameters.html","searchKeys":["setSSLParameters","abstract suspend fun setSSLParameters(params: SSLParameters)","org.knio.core.net.ssl.KSSLServerSocket.setSSLParameters"]},{"name":"abstract suspend fun setSSLParameters(params: SSLParameters)","description":"org.knio.core.net.ssl.KSSLSocket.setSSLParameters","location":"knio-core/org.knio.core.net.ssl/-k-s-s-l-socket/set-s-s-l-parameters.html","searchKeys":["setSSLParameters","abstract suspend fun setSSLParameters(params: SSLParameters)","org.knio.core.net.ssl.KSSLSocket.setSSLParameters"]},{"name":"abstract suspend fun setSendBufferSize(size: Int)","description":"org.knio.core.net.KSocket.setSendBufferSize","location":"knio-core/org.knio.core.net/-k-socket/set-send-buffer-size.html","searchKeys":["setSendBufferSize","abstract suspend fun setSendBufferSize(size: Int)","org.knio.core.net.KSocket.setSendBufferSize"]},{"name":"abstract suspend fun setTcpNoDelay(on: Boolean)","description":"org.knio.core.net.KSocket.setTcpNoDelay","location":"knio-core/org.knio.core.net/-k-socket/set-tcp-no-delay.html","searchKeys":["setTcpNoDelay","abstract suspend fun setTcpNoDelay(on: Boolean)","org.knio.core.net.KSocket.setTcpNoDelay"]},{"name":"abstract suspend fun setUseClientMode(mode: Boolean)","description":"org.knio.core.net.ssl.KSSLServerSocket.setUseClientMode","location":"knio-core/org.knio.core.net.ssl/-k-s-s-l-server-socket/set-use-client-mode.html","searchKeys":["setUseClientMode","abstract suspend fun setUseClientMode(mode: Boolean)","org.knio.core.net.ssl.KSSLServerSocket.setUseClientMode"]},{"name":"abstract suspend fun setUseClientMode(mode: Boolean)","description":"org.knio.core.net.ssl.KSSLSocket.setUseClientMode","location":"knio-core/org.knio.core.net.ssl/-k-s-s-l-socket/set-use-client-mode.html","searchKeys":["setUseClientMode","abstract suspend fun setUseClientMode(mode: Boolean)","org.knio.core.net.ssl.KSSLSocket.setUseClientMode"]},{"name":"abstract suspend fun setWantClientAuth(want: Boolean)","description":"org.knio.core.net.ssl.KSSLServerSocket.setWantClientAuth","location":"knio-core/org.knio.core.net.ssl/-k-s-s-l-server-socket/set-want-client-auth.html","searchKeys":["setWantClientAuth","abstract suspend fun setWantClientAuth(want: Boolean)","org.knio.core.net.ssl.KSSLServerSocket.setWantClientAuth"]},{"name":"abstract suspend fun setWantClientAuth(want: Boolean)","description":"org.knio.core.net.ssl.KSSLSocket.setWantClientAuth","location":"knio-core/org.knio.core.net.ssl/-k-s-s-l-socket/set-want-client-auth.html","searchKeys":["setWantClientAuth","abstract suspend fun setWantClientAuth(want: Boolean)","org.knio.core.net.ssl.KSSLSocket.setWantClientAuth"]},{"name":"abstract suspend fun setWriteTimeout(timeout: Long?)","description":"org.knio.core.net.KSocket.setWriteTimeout","location":"knio-core/org.knio.core.net/-k-socket/set-write-timeout.html","searchKeys":["setWriteTimeout","abstract suspend fun setWriteTimeout(timeout: Long?)","org.knio.core.net.KSocket.setWriteTimeout"]},{"name":"abstract suspend fun shutdownInput()","description":"org.knio.core.net.KSocket.shutdownInput","location":"knio-core/org.knio.core.net/-k-socket/shutdown-input.html","searchKeys":["shutdownInput","abstract suspend fun shutdownInput()","org.knio.core.net.KSocket.shutdownInput"]},{"name":"abstract suspend fun shutdownOutput()","description":"org.knio.core.net.KSocket.shutdownOutput","location":"knio-core/org.knio.core.net/-k-socket/shutdown-output.html","searchKeys":["shutdownOutput","abstract suspend fun shutdownOutput()","org.knio.core.net.KSocket.shutdownOutput"]},{"name":"abstract suspend fun startHandshake()","description":"org.knio.core.net.ssl.KSSLSocket.startHandshake","location":"knio-core/org.knio.core.net.ssl/-k-s-s-l-socket/start-handshake.html","searchKeys":["startHandshake","abstract suspend fun startHandshake()","org.knio.core.net.ssl.KSSLSocket.startHandshake"]},{"name":"abstract suspend fun write(b: ByteBuffer)","description":"org.knio.core.io.KOutputStream.write","location":"knio-core/org.knio.core.io/-k-output-stream/write.html","searchKeys":["write","abstract suspend fun write(b: ByteBuffer)","org.knio.core.io.KOutputStream.write"]},{"name":"abstract suspend override fun accept(): KSSLSocket","description":"org.knio.core.net.ssl.KSSLServerSocket.accept","location":"knio-core/org.knio.core.net.ssl/-k-s-s-l-server-socket/accept.html","searchKeys":["accept","abstract suspend override fun accept(): KSSLSocket","org.knio.core.net.ssl.KSSLServerSocket.accept"]},{"name":"abstract suspend override fun close()","description":"org.knio.core.io.KReader.close","location":"knio-core/org.knio.core.io/-k-reader/close.html","searchKeys":["close","abstract suspend override fun close()","org.knio.core.io.KReader.close"]},{"name":"abstract suspend override fun close()","description":"org.knio.core.net.KServerSocket.close","location":"knio-core/org.knio.core.net/-k-server-socket/close.html","searchKeys":["close","abstract suspend override fun close()","org.knio.core.net.KServerSocket.close"]},{"name":"abstract suspend override fun close()","description":"org.knio.core.net.KSocket.close","location":"knio-core/org.knio.core.net/-k-socket/close.html","searchKeys":["close","abstract suspend override fun close()","org.knio.core.net.KSocket.close"]},{"name":"abstract suspend override fun createServerSocket(): KSSLServerSocket","description":"org.knio.core.net.ssl.KSSLServerSocketFactory.createServerSocket","location":"knio-core/org.knio.core.net.ssl/-k-s-s-l-server-socket-factory/create-server-socket.html","searchKeys":["createServerSocket","abstract suspend override fun createServerSocket(): KSSLServerSocket","org.knio.core.net.ssl.KSSLServerSocketFactory.createServerSocket"]},{"name":"abstract suspend override fun createServerSocket(port: Int): KSSLServerSocket","description":"org.knio.core.net.ssl.KSSLServerSocketFactory.createServerSocket","location":"knio-core/org.knio.core.net.ssl/-k-s-s-l-server-socket-factory/create-server-socket.html","searchKeys":["createServerSocket","abstract suspend override fun createServerSocket(port: Int): KSSLServerSocket","org.knio.core.net.ssl.KSSLServerSocketFactory.createServerSocket"]},{"name":"abstract suspend override fun createServerSocket(port: Int, backlog: Int): KSSLServerSocket","description":"org.knio.core.net.ssl.KSSLServerSocketFactory.createServerSocket","location":"knio-core/org.knio.core.net.ssl/-k-s-s-l-server-socket-factory/create-server-socket.html","searchKeys":["createServerSocket","abstract suspend override fun createServerSocket(port: Int, backlog: Int): KSSLServerSocket","org.knio.core.net.ssl.KSSLServerSocketFactory.createServerSocket"]},{"name":"abstract suspend override fun createServerSocket(port: Int, backlog: Int, ifAddress: InetAddress): KSSLServerSocket","description":"org.knio.core.net.ssl.KSSLServerSocketFactory.createServerSocket","location":"knio-core/org.knio.core.net.ssl/-k-s-s-l-server-socket-factory/create-server-socket.html","searchKeys":["createServerSocket","abstract suspend override fun createServerSocket(port: Int, backlog: Int, ifAddress: InetAddress): KSSLServerSocket","org.knio.core.net.ssl.KSSLServerSocketFactory.createServerSocket"]},{"name":"abstract suspend override fun createSocket(): KSSLSocket","description":"org.knio.core.net.ssl.KSSLSocketFactory.createSocket","location":"knio-core/org.knio.core.net.ssl/-k-s-s-l-socket-factory/create-socket.html","searchKeys":["createSocket","abstract suspend override fun createSocket(): KSSLSocket","org.knio.core.net.ssl.KSSLSocketFactory.createSocket"]},{"name":"abstract suspend override fun createSocket(address: InetAddress, port: Int, localAddress: InetAddress, localPort: Int): KSSLSocket","description":"org.knio.core.net.ssl.KSSLSocketFactory.createSocket","location":"knio-core/org.knio.core.net.ssl/-k-s-s-l-socket-factory/create-socket.html","searchKeys":["createSocket","abstract suspend override fun createSocket(address: InetAddress, port: Int, localAddress: InetAddress, localPort: Int): KSSLSocket","org.knio.core.net.ssl.KSSLSocketFactory.createSocket"]},{"name":"abstract suspend override fun createSocket(host: InetAddress, port: Int): KSSLSocket","description":"org.knio.core.net.ssl.KSSLSocketFactory.createSocket","location":"knio-core/org.knio.core.net.ssl/-k-s-s-l-socket-factory/create-socket.html","searchKeys":["createSocket","abstract suspend override fun createSocket(host: InetAddress, port: Int): KSSLSocket","org.knio.core.net.ssl.KSSLSocketFactory.createSocket"]},{"name":"abstract suspend override fun createSocket(host: String, port: Int): KSSLSocket","description":"org.knio.core.net.ssl.KSSLSocketFactory.createSocket","location":"knio-core/org.knio.core.net.ssl/-k-s-s-l-socket-factory/create-socket.html","searchKeys":["createSocket","abstract suspend override fun createSocket(host: String, port: Int): KSSLSocket","org.knio.core.net.ssl.KSSLSocketFactory.createSocket"]},{"name":"abstract suspend override fun createSocket(host: String, port: Int, localHost: InetAddress, localPort: Int): KSSLSocket","description":"org.knio.core.net.ssl.KSSLSocketFactory.createSocket","location":"knio-core/org.knio.core.net.ssl/-k-s-s-l-socket-factory/create-socket.html","searchKeys":["createSocket","abstract suspend override fun createSocket(host: String, port: Int, localHost: InetAddress, localPort: Int): KSSLSocket","org.knio.core.net.ssl.KSSLSocketFactory.createSocket"]},{"name":"class ByteBufferPoolNone(isDirect: Boolean = false) : ByteBufferPool","description":"org.knio.core.context.ByteBufferPoolNone","location":"knio-core/org.knio.core.context/-byte-buffer-pool-none/index.html","searchKeys":["ByteBufferPoolNone","class ByteBufferPoolNone(isDirect: Boolean = false) : ByteBufferPool","org.knio.core.context.ByteBufferPoolNone"]},{"name":"class ChannelFactoryDefault(executor: ExecutorService = Executors.newCachedThreadPool(ThreadFactoryNamed(\"Knio\"))) : ChannelFactory","description":"org.knio.core.context.ChannelFactoryDefault","location":"knio-core/org.knio.core.context/-channel-factory-default/index.html","searchKeys":["ChannelFactoryDefault","class ChannelFactoryDefault(executor: ExecutorService = Executors.newCachedThreadPool(ThreadFactoryNamed(\"Knio\"))) : ChannelFactory","org.knio.core.context.ChannelFactoryDefault"]},{"name":"class KBufferedReader(reader: KReader, bufferSize: Int, context: KnioContext) : KReader","description":"org.knio.core.io.KBufferedReader","location":"knio-core/org.knio.core.io/-k-buffered-reader/index.html","searchKeys":["KBufferedReader","class KBufferedReader(reader: KReader, bufferSize: Int, context: KnioContext) : KReader","org.knio.core.io.KBufferedReader"]},{"name":"class KByteArrayInputStream(data: ByteArray, context: KnioContext) : KInputStream","description":"org.knio.core.io.KByteArrayInputStream","location":"knio-core/org.knio.core.io/-k-byte-array-input-stream/index.html","searchKeys":["KByteArrayInputStream","class KByteArrayInputStream(data: ByteArray, context: KnioContext) : KInputStream","org.knio.core.io.KByteArrayInputStream"]},{"name":"class KFileInputStream : KInputStream","description":"org.knio.core.io.KFileInputStream","location":"knio-core/org.knio.core.io/-k-file-input-stream/index.html","searchKeys":["KFileInputStream","class KFileInputStream : KInputStream","org.knio.core.io.KFileInputStream"]},{"name":"class KFileOutputStream : KOutputStream","description":"org.knio.core.io.KFileOutputStream","location":"knio-core/org.knio.core.io/-k-file-output-stream/index.html","searchKeys":["KFileOutputStream","class KFileOutputStream : KOutputStream","org.knio.core.io.KFileOutputStream"]},{"name":"class KHandshakeCompletedEvent(sock: KSSLSocket, session: SSLSession) : EventObject","description":"org.knio.core.net.ssl.KHandshakeCompletedEvent","location":"knio-core/org.knio.core.net.ssl/-k-handshake-completed-event/index.html","searchKeys":["KHandshakeCompletedEvent","class KHandshakeCompletedEvent(sock: KSSLSocket, session: SSLSession) : EventObject","org.knio.core.net.ssl.KHandshakeCompletedEvent"]},{"name":"class KInputStreamReader : KReader","description":"org.knio.core.io.KInputStreamReader","location":"knio-core/org.knio.core.io/-k-input-stream-reader/index.html","searchKeys":["KInputStreamReader","class KInputStreamReader : KReader","org.knio.core.io.KInputStreamReader"]},{"name":"class KSSLServerSocketFactoryDefault(sslContext: SSLContext, context: KnioContext) : KSSLServerSocketFactory","description":"org.knio.core.net.ssl.KSSLServerSocketFactoryDefault","location":"knio-core/org.knio.core.net.ssl/-k-s-s-l-server-socket-factory-default/index.html","searchKeys":["KSSLServerSocketFactoryDefault","class KSSLServerSocketFactoryDefault(sslContext: SSLContext, context: KnioContext) : KSSLServerSocketFactory","org.knio.core.net.ssl.KSSLServerSocketFactoryDefault"]},{"name":"class KStringReader : KReader","description":"org.knio.core.io.KStringReader","location":"knio-core/org.knio.core.io/-k-string-reader/index.html","searchKeys":["KStringReader","class KStringReader : KReader","org.knio.core.io.KStringReader"]},{"name":"constructor()","description":"org.knio.core.io.KOutputStream.KOutputStream","location":"knio-core/org.knio.core.io/-k-output-stream/-k-output-stream.html","searchKeys":["KOutputStream","constructor()","org.knio.core.io.KOutputStream.KOutputStream"]},{"name":"constructor(context: KnioContext)","description":"org.knio.core.io.KInputStream.KInputStream","location":"knio-core/org.knio.core.io/-k-input-stream/-k-input-stream.html","searchKeys":["KInputStream","constructor(context: KnioContext)","org.knio.core.io.KInputStream.KInputStream"]},{"name":"constructor(context: KnioContext, lock: Mutex = Mutex())","description":"org.knio.core.io.KReader.KReader","location":"knio-core/org.knio.core.io/-k-reader/-k-reader.html","searchKeys":["KReader","constructor(context: KnioContext, lock: Mutex = Mutex())","org.knio.core.io.KReader.KReader"]},{"name":"constructor(data: ByteArray, context: KnioContext)","description":"org.knio.core.io.KByteArrayInputStream.KByteArrayInputStream","location":"knio-core/org.knio.core.io/-k-byte-array-input-stream/-k-byte-array-input-stream.html","searchKeys":["KByteArrayInputStream","constructor(data: ByteArray, context: KnioContext)","org.knio.core.io.KByteArrayInputStream.KByteArrayInputStream"]},{"name":"constructor(executor: ExecutorService = Executors.newCachedThreadPool(ThreadFactoryNamed(\"Knio\")))","description":"org.knio.core.context.ChannelFactoryDefault.ChannelFactoryDefault","location":"knio-core/org.knio.core.context/-channel-factory-default/-channel-factory-default.html","searchKeys":["ChannelFactoryDefault","constructor(executor: ExecutorService = Executors.newCachedThreadPool(ThreadFactoryNamed(\"Knio\")))","org.knio.core.context.ChannelFactoryDefault.ChannelFactoryDefault"]},{"name":"constructor(isDirect: Boolean = false)","description":"org.knio.core.context.ByteBufferPoolNone.ByteBufferPoolNone","location":"knio-core/org.knio.core.context/-byte-buffer-pool-none/-byte-buffer-pool-none.html","searchKeys":["ByteBufferPoolNone","constructor(isDirect: Boolean = false)","org.knio.core.context.ByteBufferPoolNone.ByteBufferPoolNone"]},{"name":"constructor(maxTaskBufferSize: Int = DEFAULT_TASK_BUFFER_SIZE, maxStreamBufferSize: Int = DEFAULT_STREAM_BUFFER_SIZE, byteBufferPool: ByteBufferPool = DEFAULT_BYTE_BUFFER_POOL, channelFactory: ChannelFactory = DEFAULT_CHANNEL_FACTORY)","description":"org.knio.core.context.KnioContext.KnioContext","location":"knio-core/org.knio.core.context/-knio-context/-knio-context.html","searchKeys":["KnioContext","constructor(maxTaskBufferSize: Int = DEFAULT_TASK_BUFFER_SIZE, maxStreamBufferSize: Int = DEFAULT_STREAM_BUFFER_SIZE, byteBufferPool: ByteBufferPool = DEFAULT_BYTE_BUFFER_POOL, channelFactory: ChannelFactory = DEFAULT_CHANNEL_FACTORY)","org.knio.core.context.KnioContext.KnioContext"]},{"name":"constructor(reader: KReader, bufferSize: Int, context: KnioContext)","description":"org.knio.core.io.KBufferedReader.KBufferedReader","location":"knio-core/org.knio.core.io/-k-buffered-reader/-k-buffered-reader.html","searchKeys":["KBufferedReader","constructor(reader: KReader, bufferSize: Int, context: KnioContext)","org.knio.core.io.KBufferedReader.KBufferedReader"]},{"name":"constructor(sock: KSSLSocket, session: SSLSession)","description":"org.knio.core.net.ssl.KHandshakeCompletedEvent.KHandshakeCompletedEvent","location":"knio-core/org.knio.core.net.ssl/-k-handshake-completed-event/-k-handshake-completed-event.html","searchKeys":["KHandshakeCompletedEvent","constructor(sock: KSSLSocket, session: SSLSession)","org.knio.core.net.ssl.KHandshakeCompletedEvent.KHandshakeCompletedEvent"]},{"name":"constructor(sslContext: SSLContext, context: KnioContext)","description":"org.knio.core.net.ssl.KSSLServerSocketFactoryDefault.KSSLServerSocketFactoryDefault","location":"knio-core/org.knio.core.net.ssl/-k-s-s-l-server-socket-factory-default/-k-s-s-l-server-socket-factory-default.html","searchKeys":["KSSLServerSocketFactoryDefault","constructor(sslContext: SSLContext, context: KnioContext)","org.knio.core.net.ssl.KSSLServerSocketFactoryDefault.KSSLServerSocketFactoryDefault"]},{"name":"data class KnioContext(val maxTaskBufferSize: Int = DEFAULT_TASK_BUFFER_SIZE, val maxStreamBufferSize: Int = DEFAULT_STREAM_BUFFER_SIZE, val byteBufferPool: ByteBufferPool = DEFAULT_BYTE_BUFFER_POOL, val channelFactory: ChannelFactory = DEFAULT_CHANNEL_FACTORY) : CoroutineContext.Element","description":"org.knio.core.context.KnioContext","location":"knio-core/org.knio.core.context/-knio-context/index.html","searchKeys":["KnioContext","data class KnioContext(val maxTaskBufferSize: Int = DEFAULT_TASK_BUFFER_SIZE, val maxStreamBufferSize: Int = DEFAULT_STREAM_BUFFER_SIZE, val byteBufferPool: ByteBufferPool = DEFAULT_BYTE_BUFFER_POOL, val channelFactory: ChannelFactory = DEFAULT_CHANNEL_FACTORY) : CoroutineContext.Element","org.knio.core.context.KnioContext"]},{"name":"fun String.toCharBuffer(): CharBuffer","description":"org.knio.core.lang.toCharBuffer","location":"knio-core/org.knio.core.lang/to-char-buffer.html","searchKeys":["toCharBuffer","fun String.toCharBuffer(): CharBuffer","org.knio.core.lang.toCharBuffer"]},{"name":"fun getCipherSuite(): String","description":"org.knio.core.net.ssl.KHandshakeCompletedEvent.getCipherSuite","location":"knio-core/org.knio.core.net.ssl/-k-handshake-completed-event/get-cipher-suite.html","searchKeys":["getCipherSuite","fun getCipherSuite(): String","org.knio.core.net.ssl.KHandshakeCompletedEvent.getCipherSuite"]},{"name":"fun getLocalCertificates(): Array<Certificate>","description":"org.knio.core.net.ssl.KHandshakeCompletedEvent.getLocalCertificates","location":"knio-core/org.knio.core.net.ssl/-k-handshake-completed-event/get-local-certificates.html","searchKeys":["getLocalCertificates","fun getLocalCertificates(): Array<Certificate>","org.knio.core.net.ssl.KHandshakeCompletedEvent.getLocalCertificates"]},{"name":"fun getLocalPrincipal(): Principal?","description":"org.knio.core.net.ssl.KHandshakeCompletedEvent.getLocalPrincipal","location":"knio-core/org.knio.core.net.ssl/-k-handshake-completed-event/get-local-principal.html","searchKeys":["getLocalPrincipal","fun getLocalPrincipal(): Principal?","org.knio.core.net.ssl.KHandshakeCompletedEvent.getLocalPrincipal"]},{"name":"fun getPeerCertificates(): Array<Certificate>","description":"org.knio.core.net.ssl.KHandshakeCompletedEvent.getPeerCertificates","location":"knio-core/org.knio.core.net.ssl/-k-handshake-completed-event/get-peer-certificates.html","searchKeys":["getPeerCertificates","fun getPeerCertificates(): Array<Certificate>","org.knio.core.net.ssl.KHandshakeCompletedEvent.getPeerCertificates"]},{"name":"fun getPeerPrincipal(): Principal","description":"org.knio.core.net.ssl.KHandshakeCompletedEvent.getPeerPrincipal","location":"knio-core/org.knio.core.net.ssl/-k-handshake-completed-event/get-peer-principal.html","searchKeys":["getPeerPrincipal","fun getPeerPrincipal(): Principal","org.knio.core.net.ssl.KHandshakeCompletedEvent.getPeerPrincipal"]},{"name":"fun getSession(): SSLSession","description":"org.knio.core.net.ssl.KHandshakeCompletedEvent.getSession","location":"knio-core/org.knio.core.net.ssl/-k-handshake-completed-event/get-session.html","searchKeys":["getSession","fun getSession(): SSLSession","org.knio.core.net.ssl.KHandshakeCompletedEvent.getSession"]},{"name":"fun getSocket(): KSSLSocket","description":"org.knio.core.net.ssl.KHandshakeCompletedEvent.getSocket","location":"knio-core/org.knio.core.net.ssl/-k-handshake-completed-event/get-socket.html","searchKeys":["getSocket","fun getSocket(): KSSLSocket","org.knio.core.net.ssl.KHandshakeCompletedEvent.getSocket"]},{"name":"fun interface KHandshakeCompletedListener : EventListener","description":"org.knio.core.net.ssl.KHandshakeCompletedListener","location":"knio-core/org.knio.core.net.ssl/-k-handshake-completed-listener/index.html","searchKeys":["KHandshakeCompletedListener","fun interface KHandshakeCompletedListener : EventListener","org.knio.core.net.ssl.KHandshakeCompletedListener"]},{"name":"inline suspend fun <T : KAutoCloseable, R> T.use(crossinline block: suspend (T) -> R): R","description":"org.knio.core.lang.use","location":"knio-core/org.knio.core.lang/use.html","searchKeys":["use","inline suspend fun <T : KAutoCloseable, R> T.use(crossinline block: suspend (T) -> R): R","org.knio.core.lang.use"]},{"name":"inline suspend fun <T : KAutoCloseable, R> T.use(dispatcher: CoroutineDispatcher, crossinline block: suspend (T) -> R): R","description":"org.knio.core.lang.use","location":"knio-core/org.knio.core.lang/use.html","searchKeys":["use","inline suspend fun <T : KAutoCloseable, R> T.use(dispatcher: CoroutineDispatcher, crossinline block: suspend (T) -> R): R","org.knio.core.lang.use"]},{"name":"interface ByteBufferPool","description":"org.knio.core.context.ByteBufferPool","location":"knio-core/org.knio.core.context/-byte-buffer-pool/index.html","searchKeys":["ByteBufferPool","interface ByteBufferPool","org.knio.core.context.ByteBufferPool"]},{"name":"interface ChannelFactory","description":"org.knio.core.context.ChannelFactory","location":"knio-core/org.knio.core.context/-channel-factory/index.html","searchKeys":["ChannelFactory","interface ChannelFactory","org.knio.core.context.ChannelFactory"]},{"name":"interface KAutoCloseable","description":"org.knio.core.lang.KAutoCloseable","location":"knio-core/org.knio.core.lang/-k-auto-closeable/index.html","searchKeys":["KAutoCloseable","interface KAutoCloseable","org.knio.core.lang.KAutoCloseable"]},{"name":"interface KSSLServerSocket : KServerSocket","description":"org.knio.core.net.ssl.KSSLServerSocket","location":"knio-core/org.knio.core.net.ssl/-k-s-s-l-server-socket/index.html","searchKeys":["KSSLServerSocket","interface KSSLServerSocket : KServerSocket","org.knio.core.net.ssl.KSSLServerSocket"]},{"name":"interface KSSLServerSocketFactory : KServerSocketFactory","description":"org.knio.core.net.ssl.KSSLServerSocketFactory","location":"knio-core/org.knio.core.net.ssl/-k-s-s-l-server-socket-factory/index.html","searchKeys":["KSSLServerSocketFactory","interface KSSLServerSocketFactory : KServerSocketFactory","org.knio.core.net.ssl.KSSLServerSocketFactory"]},{"name":"interface KSSLSocket : KSocket","description":"org.knio.core.net.ssl.KSSLSocket","location":"knio-core/org.knio.core.net.ssl/-k-s-s-l-socket/index.html","searchKeys":["KSSLSocket","interface KSSLSocket : KSocket","org.knio.core.net.ssl.KSSLSocket"]},{"name":"interface KSSLSocketFactory : KSocketFactory","description":"org.knio.core.net.ssl.KSSLSocketFactory","location":"knio-core/org.knio.core.net.ssl/-k-s-s-l-socket-factory/index.html","searchKeys":["KSSLSocketFactory","interface KSSLSocketFactory : KSocketFactory","org.knio.core.net.ssl.KSSLSocketFactory"]},{"name":"interface KServerSocket : KAutoCloseable","description":"org.knio.core.net.KServerSocket","location":"knio-core/org.knio.core.net/-k-server-socket/index.html","searchKeys":["KServerSocket","interface KServerSocket : KAutoCloseable","org.knio.core.net.KServerSocket"]},{"name":"interface KServerSocketFactory","description":"org.knio.core.net.KServerSocketFactory","location":"knio-core/org.knio.core.net/-k-server-socket-factory/index.html","searchKeys":["KServerSocketFactory","interface KServerSocketFactory","org.knio.core.net.KServerSocketFactory"]},{"name":"interface KSocket : KAutoCloseable","description":"org.knio.core.net.KSocket","location":"knio-core/org.knio.core.net/-k-socket/index.html","searchKeys":["KSocket","interface KSocket : KAutoCloseable","org.knio.core.net.KSocket"]},{"name":"interface KSocketFactory","description":"org.knio.core.net.KSocketFactory","location":"knio-core/org.knio.core.net/-k-socket-factory/index.html","searchKeys":["KSocketFactory","interface KSocketFactory","org.knio.core.net.KSocketFactory"]},{"name":"object Companion","description":"org.knio.core.io.KBufferedReader.Companion","location":"knio-core/org.knio.core.io/-k-buffered-reader/-companion/index.html","searchKeys":["Companion","object Companion","org.knio.core.io.KBufferedReader.Companion"]},{"name":"object Companion","description":"org.knio.core.io.KByteArrayInputStream.Companion","location":"knio-core/org.knio.core.io/-k-byte-array-input-stream/-companion/index.html","searchKeys":["Companion","object Companion","org.knio.core.io.KByteArrayInputStream.Companion"]},{"name":"object Companion","description":"org.knio.core.io.KFileInputStream.Companion","location":"knio-core/org.knio.core.io/-k-file-input-stream/-companion/index.html","searchKeys":["Companion","object Companion","org.knio.core.io.KFileInputStream.Companion"]},{"name":"object Companion","description":"org.knio.core.io.KFileOutputStream.Companion","location":"knio-core/org.knio.core.io/-k-file-output-stream/-companion/index.html","searchKeys":["Companion","object Companion","org.knio.core.io.KFileOutputStream.Companion"]},{"name":"object Companion","description":"org.knio.core.io.KInputStreamReader.Companion","location":"knio-core/org.knio.core.io/-k-input-stream-reader/-companion/index.html","searchKeys":["Companion","object Companion","org.knio.core.io.KInputStreamReader.Companion"]},{"name":"object Companion","description":"org.knio.core.io.KStringReader.Companion","location":"knio-core/org.knio.core.io/-k-string-reader/-companion/index.html","searchKeys":["Companion","object Companion","org.knio.core.io.KStringReader.Companion"]},{"name":"object Companion","description":"org.knio.core.net.KServerSocketFactory.Companion","location":"knio-core/org.knio.core.net/-k-server-socket-factory/-companion/index.html","searchKeys":["Companion","object Companion","org.knio.core.net.KServerSocketFactory.Companion"]},{"name":"object Companion","description":"org.knio.core.net.KSocketFactory.Companion","location":"knio-core/org.knio.core.net/-k-socket-factory/-companion/index.html","searchKeys":["Companion","object Companion","org.knio.core.net.KSocketFactory.Companion"]},{"name":"object Companion","description":"org.knio.core.net.ssl.KSSLServerSocketFactory.Companion","location":"knio-core/org.knio.core.net.ssl/-k-s-s-l-server-socket-factory/-companion/index.html","searchKeys":["Companion","object Companion","org.knio.core.net.ssl.KSSLServerSocketFactory.Companion"]},{"name":"object Companion","description":"org.knio.core.net.ssl.KSSLSocketFactory.Companion","location":"knio-core/org.knio.core.net.ssl/-k-s-s-l-socket-factory/-companion/index.html","searchKeys":["Companion","object Companion","org.knio.core.net.ssl.KSSLSocketFactory.Companion"]},{"name":"object Key : CoroutineContext.Key<KnioContext> ","description":"org.knio.core.context.KnioContext.Key","location":"knio-core/org.knio.core.context/-knio-context/-key/index.html","searchKeys":["Key","object Key : CoroutineContext.Key<KnioContext> ","org.knio.core.context.KnioContext.Key"]},{"name":"open override fun acquire(size: Int): ByteBuffer","description":"org.knio.core.context.ByteBufferPoolNone.acquire","location":"knio-core/org.knio.core.context/-byte-buffer-pool-none/acquire.html","searchKeys":["acquire","open override fun acquire(size: Int): ByteBuffer","org.knio.core.context.ByteBufferPoolNone.acquire"]},{"name":"open override fun openFileChannel(file: Path, vararg options: OpenOption): AsynchronousFileChannel","description":"org.knio.core.context.ChannelFactoryDefault.openFileChannel","location":"knio-core/org.knio.core.context/-channel-factory-default/open-file-channel.html","searchKeys":["openFileChannel","open override fun openFileChannel(file: Path, vararg options: OpenOption): AsynchronousFileChannel","org.knio.core.context.ChannelFactoryDefault.openFileChannel"]},{"name":"open override fun openServerSocketChannel(): AsynchronousServerSocketChannel","description":"org.knio.core.context.ChannelFactoryDefault.openServerSocketChannel","location":"knio-core/org.knio.core.context/-channel-factory-default/open-server-socket-channel.html","searchKeys":["openServerSocketChannel","open override fun openServerSocketChannel(): AsynchronousServerSocketChannel","org.knio.core.context.ChannelFactoryDefault.openServerSocketChannel"]},{"name":"open override fun openSocketChannel(): AsynchronousSocketChannel","description":"org.knio.core.context.ChannelFactoryDefault.openSocketChannel","location":"knio-core/org.knio.core.context/-channel-factory-default/open-socket-channel.html","searchKeys":["openSocketChannel","open override fun openSocketChannel(): AsynchronousSocketChannel","org.knio.core.context.ChannelFactoryDefault.openSocketChannel"]},{"name":"open override fun release(buffer: ByteBuffer)","description":"org.knio.core.context.ByteBufferPoolNone.release","location":"knio-core/org.knio.core.context/-byte-buffer-pool-none/release.html","searchKeys":["release","open override fun release(buffer: ByteBuffer)","org.knio.core.context.ByteBufferPoolNone.release"]},{"name":"open override fun shutdown()","description":"org.knio.core.context.ChannelFactoryDefault.shutdown","location":"knio-core/org.knio.core.context/-channel-factory-default/shutdown.html","searchKeys":["shutdown","open override fun shutdown()","org.knio.core.context.ChannelFactoryDefault.shutdown"]},{"name":"open override val key: CoroutineContext.Key<KnioContext>","description":"org.knio.core.context.KnioContext.key","location":"knio-core/org.knio.core.context/-knio-context/key.html","searchKeys":["key","open override val key: CoroutineContext.Key<KnioContext>","org.knio.core.context.KnioContext.key"]},{"name":"open suspend fun available(): Int","description":"org.knio.core.io.KInputStream.available","location":"knio-core/org.knio.core.io/-k-input-stream/available.html","searchKeys":["available","open suspend fun available(): Int","org.knio.core.io.KInputStream.available"]},{"name":"open suspend fun flush()","description":"org.knio.core.io.KOutputStream.flush","location":"knio-core/org.knio.core.io/-k-output-stream/flush.html","searchKeys":["flush","open suspend fun flush()","org.knio.core.io.KOutputStream.flush"]},{"name":"open suspend fun mark(readLimit: Int)","description":"org.knio.core.io.KInputStream.mark","location":"knio-core/org.knio.core.io/-k-input-stream/mark.html","searchKeys":["mark","open suspend fun mark(readLimit: Int)","org.knio.core.io.KInputStream.mark"]},{"name":"open suspend fun mark(readLimit: Int)","description":"org.knio.core.io.KReader.mark","location":"knio-core/org.knio.core.io/-k-reader/mark.html","searchKeys":["mark","open suspend fun mark(readLimit: Int)","org.knio.core.io.KReader.mark"]},{"name":"open suspend fun markSupported(): Boolean","description":"org.knio.core.io.KInputStream.markSupported","location":"knio-core/org.knio.core.io/-k-input-stream/mark-supported.html","searchKeys":["markSupported","open suspend fun markSupported(): Boolean","org.knio.core.io.KInputStream.markSupported"]},{"name":"open suspend fun markSupported(): Boolean","description":"org.knio.core.io.KReader.markSupported","location":"knio-core/org.knio.core.io/-k-reader/mark-supported.html","searchKeys":["markSupported","open suspend fun markSupported(): Boolean","org.knio.core.io.KReader.markSupported"]},{"name":"open suspend fun read(): Int","description":"org.knio.core.io.KInputStream.read","location":"knio-core/org.knio.core.io/-k-input-stream/read.html","searchKeys":["read","open suspend fun read(): Int","org.knio.core.io.KInputStream.read"]},{"name":"open suspend fun read(): Int","description":"org.knio.core.io.KReader.read","location":"knio-core/org.knio.core.io/-k-reader/read.html","searchKeys":["read","open suspend fun read(): Int","org.knio.core.io.KReader.read"]},{"name":"open suspend fun read(b: ByteArray): Int","description":"org.knio.core.io.KInputStream.read","location":"knio-core/org.knio.core.io/-k-input-stream/read.html","searchKeys":["read","open suspend fun read(b: ByteArray): Int","org.knio.core.io.KInputStream.read"]},{"name":"open suspend fun read(b: ByteArray, off: Int, len: Int): Int","description":"org.knio.core.io.KInputStream.read","location":"knio-core/org.knio.core.io/-k-input-stream/read.html","searchKeys":["read","open suspend fun read(b: ByteArray, off: Int, len: Int): Int","org.knio.core.io.KInputStream.read"]},{"name":"open suspend fun read(b: CharArray): Int","description":"org.knio.core.io.KReader.read","location":"knio-core/org.knio.core.io/-k-reader/read.html","searchKeys":["read","open suspend fun read(b: CharArray): Int","org.knio.core.io.KReader.read"]},{"name":"open suspend fun read(b: CharArray, off: Int, len: Int): Int","description":"org.knio.core.io.KReader.read","location":"knio-core/org.knio.core.io/-k-reader/read.html","searchKeys":["read","open suspend fun read(b: CharArray, off: Int, len: Int): Int","org.knio.core.io.KReader.read"]},{"name":"open suspend fun readAllBytes(): ByteArray","description":"org.knio.core.io.KInputStream.readAllBytes","location":"knio-core/org.knio.core.io/-k-input-stream/read-all-bytes.html","searchKeys":["readAllBytes","open suspend fun readAllBytes(): ByteArray","org.knio.core.io.KInputStream.readAllBytes"]},{"name":"open suspend fun readNBytes(b: ByteArray, off: Int, len: Int): Int","description":"org.knio.core.io.KInputStream.readNBytes","location":"knio-core/org.knio.core.io/-k-input-stream/read-n-bytes.html","searchKeys":["readNBytes","open suspend fun readNBytes(b: ByteArray, off: Int, len: Int): Int","org.knio.core.io.KInputStream.readNBytes"]},{"name":"open suspend fun readNBytes(len: Int): ByteArray","description":"org.knio.core.io.KInputStream.readNBytes","location":"knio-core/org.knio.core.io/-k-input-stream/read-n-bytes.html","searchKeys":["readNBytes","open suspend fun readNBytes(len: Int): ByteArray","org.knio.core.io.KInputStream.readNBytes"]},{"name":"open suspend fun ready(): Boolean","description":"org.knio.core.io.KReader.ready","location":"knio-core/org.knio.core.io/-k-reader/ready.html","searchKeys":["ready","open suspend fun ready(): Boolean","org.knio.core.io.KReader.ready"]},{"name":"open suspend fun reset()","description":"org.knio.core.io.KInputStream.reset","location":"knio-core/org.knio.core.io/-k-input-stream/reset.html","searchKeys":["reset","open suspend fun reset()","org.knio.core.io.KInputStream.reset"]},{"name":"open suspend fun reset()","description":"org.knio.core.io.KReader.reset","location":"knio-core/org.knio.core.io/-k-reader/reset.html","searchKeys":["reset","open suspend fun reset()","org.knio.core.io.KReader.reset"]},{"name":"open suspend fun skip(n: Long): Long","description":"org.knio.core.io.KInputStream.skip","location":"knio-core/org.knio.core.io/-k-input-stream/skip.html","searchKeys":["skip","open suspend fun skip(n: Long): Long","org.knio.core.io.KInputStream.skip"]},{"name":"open suspend fun skip(n: Long): Long","description":"org.knio.core.io.KReader.skip","location":"knio-core/org.knio.core.io/-k-reader/skip.html","searchKeys":["skip","open suspend fun skip(n: Long): Long","org.knio.core.io.KReader.skip"]},{"name":"open suspend fun write(b: ByteArray)","description":"org.knio.core.io.KOutputStream.write","location":"knio-core/org.knio.core.io/-k-output-stream/write.html","searchKeys":["write","open suspend fun write(b: ByteArray)","org.knio.core.io.KOutputStream.write"]},{"name":"open suspend fun write(b: ByteArray, off: Int, len: Int)","description":"org.knio.core.io.KOutputStream.write","location":"knio-core/org.knio.core.io/-k-output-stream/write.html","searchKeys":["write","open suspend fun write(b: ByteArray, off: Int, len: Int)","org.knio.core.io.KOutputStream.write"]},{"name":"open suspend fun write(b: Int)","description":"org.knio.core.io.KOutputStream.write","location":"knio-core/org.knio.core.io/-k-output-stream/write.html","searchKeys":["write","open suspend fun write(b: Int)","org.knio.core.io.KOutputStream.write"]},{"name":"open suspend override fun available(): Int","description":"org.knio.core.io.KFileInputStream.available","location":"knio-core/org.knio.core.io/-k-file-input-stream/available.html","searchKeys":["available","open suspend override fun available(): Int","org.knio.core.io.KFileInputStream.available"]},{"name":"open suspend override fun close()","description":"org.knio.core.io.KBufferedReader.close","location":"knio-core/org.knio.core.io/-k-buffered-reader/close.html","searchKeys":["close","open suspend override fun close()","org.knio.core.io.KBufferedReader.close"]},{"name":"open suspend override fun close()","description":"org.knio.core.io.KFileInputStream.close","location":"knio-core/org.knio.core.io/-k-file-input-stream/close.html","searchKeys":["close","open suspend override fun close()","org.knio.core.io.KFileInputStream.close"]},{"name":"open suspend override fun close()","description":"org.knio.core.io.KFileOutputStream.close","location":"knio-core/org.knio.core.io/-k-file-output-stream/close.html","searchKeys":["close","open suspend override fun close()","org.knio.core.io.KFileOutputStream.close"]},{"name":"open suspend override fun close()","description":"org.knio.core.io.KInputStream.close","location":"knio-core/org.knio.core.io/-k-input-stream/close.html","searchKeys":["close","open suspend override fun close()","org.knio.core.io.KInputStream.close"]},{"name":"open suspend override fun close()","description":"org.knio.core.io.KInputStreamReader.close","location":"knio-core/org.knio.core.io/-k-input-stream-reader/close.html","searchKeys":["close","open suspend override fun close()","org.knio.core.io.KInputStreamReader.close"]},{"name":"open suspend override fun close()","description":"org.knio.core.io.KOutputStream.close","location":"knio-core/org.knio.core.io/-k-output-stream/close.html","searchKeys":["close","open suspend override fun close()","org.knio.core.io.KOutputStream.close"]},{"name":"open suspend override fun close()","description":"org.knio.core.io.KStringReader.close","location":"knio-core/org.knio.core.io/-k-string-reader/close.html","searchKeys":["close","open suspend override fun close()","org.knio.core.io.KStringReader.close"]},{"name":"open suspend override fun createServerSocket(): KSSLServerSocket","description":"org.knio.core.net.ssl.KSSLServerSocketFactoryDefault.createServerSocket","location":"knio-core/org.knio.core.net.ssl/-k-s-s-l-server-socket-factory-default/create-server-socket.html","searchKeys":["createServerSocket","open suspend override fun createServerSocket(): KSSLServerSocket","org.knio.core.net.ssl.KSSLServerSocketFactoryDefault.createServerSocket"]},{"name":"open suspend override fun createServerSocket(port: Int): KSSLServerSocket","description":"org.knio.core.net.ssl.KSSLServerSocketFactoryDefault.createServerSocket","location":"knio-core/org.knio.core.net.ssl/-k-s-s-l-server-socket-factory-default/create-server-socket.html","searchKeys":["createServerSocket","open suspend override fun createServerSocket(port: Int): KSSLServerSocket","org.knio.core.net.ssl.KSSLServerSocketFactoryDefault.createServerSocket"]},{"name":"open suspend override fun createServerSocket(port: Int, backlog: Int): KSSLServerSocket","description":"org.knio.core.net.ssl.KSSLServerSocketFactoryDefault.createServerSocket","location":"knio-core/org.knio.core.net.ssl/-k-s-s-l-server-socket-factory-default/create-server-socket.html","searchKeys":["createServerSocket","open suspend override fun createServerSocket(port: Int, backlog: Int): KSSLServerSocket","org.knio.core.net.ssl.KSSLServerSocketFactoryDefault.createServerSocket"]},{"name":"open suspend override fun createServerSocket(port: Int, backlog: Int, ifAddress: InetAddress): KSSLServerSocket","description":"org.knio.core.net.ssl.KSSLServerSocketFactoryDefault.createServerSocket","location":"knio-core/org.knio.core.net.ssl/-k-s-s-l-server-socket-factory-default/create-server-socket.html","searchKeys":["createServerSocket","open suspend override fun createServerSocket(port: Int, backlog: Int, ifAddress: InetAddress): KSSLServerSocket","org.knio.core.net.ssl.KSSLServerSocketFactoryDefault.createServerSocket"]},{"name":"open suspend override fun mark(readLimit: Int)","description":"org.knio.core.io.KBufferedReader.mark","location":"knio-core/org.knio.core.io/-k-buffered-reader/mark.html","searchKeys":["mark","open suspend override fun mark(readLimit: Int)","org.knio.core.io.KBufferedReader.mark"]},{"name":"open suspend override fun mark(readLimit: Int)","description":"org.knio.core.io.KFileInputStream.mark","location":"knio-core/org.knio.core.io/-k-file-input-stream/mark.html","searchKeys":["mark","open suspend override fun mark(readLimit: Int)","org.knio.core.io.KFileInputStream.mark"]},{"name":"open suspend override fun mark(readLimit: Int)","description":"org.knio.core.io.KStringReader.mark","location":"knio-core/org.knio.core.io/-k-string-reader/mark.html","searchKeys":["mark","open suspend override fun mark(readLimit: Int)","org.knio.core.io.KStringReader.mark"]},{"name":"open suspend override fun markSupported(): Boolean","description":"org.knio.core.io.KBufferedReader.markSupported","location":"knio-core/org.knio.core.io/-k-buffered-reader/mark-supported.html","searchKeys":["markSupported","open suspend override fun markSupported(): Boolean","org.knio.core.io.KBufferedReader.markSupported"]},{"name":"open suspend override fun markSupported(): Boolean","description":"org.knio.core.io.KFileInputStream.markSupported","location":"knio-core/org.knio.core.io/-k-file-input-stream/mark-supported.html","searchKeys":["markSupported","open suspend override fun markSupported(): Boolean","org.knio.core.io.KFileInputStream.markSupported"]},{"name":"open suspend override fun markSupported(): Boolean","description":"org.knio.core.io.KStringReader.markSupported","location":"knio-core/org.knio.core.io/-k-string-reader/mark-supported.html","searchKeys":["markSupported","open suspend override fun markSupported(): Boolean","org.knio.core.io.KStringReader.markSupported"]},{"name":"open suspend override fun read(): Int","description":"org.knio.core.io.KBufferedReader.read","location":"knio-core/org.knio.core.io/-k-buffered-reader/read.html","searchKeys":["read","open suspend override fun read(): Int","org.knio.core.io.KBufferedReader.read"]},{"name":"open suspend override fun read(b: ByteBuffer): Int","description":"org.knio.core.io.KByteArrayInputStream.read","location":"knio-core/org.knio.core.io/-k-byte-array-input-stream/read.html","searchKeys":["read","open suspend override fun read(b: ByteBuffer): Int","org.knio.core.io.KByteArrayInputStream.read"]},{"name":"open suspend override fun read(b: ByteBuffer): Int","description":"org.knio.core.io.KFileInputStream.read","location":"knio-core/org.knio.core.io/-k-file-input-stream/read.html","searchKeys":["read","open suspend override fun read(b: ByteBuffer): Int","org.knio.core.io.KFileInputStream.read"]},{"name":"open suspend override fun read(b: CharBuffer): Int","description":"org.knio.core.io.KBufferedReader.read","location":"knio-core/org.knio.core.io/-k-buffered-reader/read.html","searchKeys":["read","open suspend override fun read(b: CharBuffer): Int","org.knio.core.io.KBufferedReader.read"]},{"name":"open suspend override fun read(b: CharBuffer): Int","description":"org.knio.core.io.KInputStreamReader.read","location":"knio-core/org.knio.core.io/-k-input-stream-reader/read.html","searchKeys":["read","open suspend override fun read(b: CharBuffer): Int","org.knio.core.io.KInputStreamReader.read"]},{"name":"open suspend override fun read(b: CharBuffer): Int","description":"org.knio.core.io.KStringReader.read","location":"knio-core/org.knio.core.io/-k-string-reader/read.html","searchKeys":["read","open suspend override fun read(b: CharBuffer): Int","org.knio.core.io.KStringReader.read"]},{"name":"open suspend override fun read(cbuf: CharArray, off: Int, len: Int): Int","description":"org.knio.core.io.KBufferedReader.read","location":"knio-core/org.knio.core.io/-k-buffered-reader/read.html","searchKeys":["read","open suspend override fun read(cbuf: CharArray, off: Int, len: Int): Int","org.knio.core.io.KBufferedReader.read"]},{"name":"open suspend override fun ready(): Boolean","description":"org.knio.core.io.KBufferedReader.ready","location":"knio-core/org.knio.core.io/-k-buffered-reader/ready.html","searchKeys":["ready","open suspend override fun ready(): Boolean","org.knio.core.io.KBufferedReader.ready"]},{"name":"open suspend override fun ready(): Boolean","description":"org.knio.core.io.KStringReader.ready","location":"knio-core/org.knio.core.io/-k-string-reader/ready.html","searchKeys":["ready","open suspend override fun ready(): Boolean","org.knio.core.io.KStringReader.ready"]},{"name":"open suspend override fun reset()","description":"org.knio.core.io.KBufferedReader.reset","location":"knio-core/org.knio.core.io/-k-buffered-reader/reset.html","searchKeys":["reset","open suspend override fun reset()","org.knio.core.io.KBufferedReader.reset"]},{"name":"open suspend override fun reset()","description":"org.knio.core.io.KFileInputStream.reset","location":"knio-core/org.knio.core.io/-k-file-input-stream/reset.html","searchKeys":["reset","open suspend override fun reset()","org.knio.core.io.KFileInputStream.reset"]},{"name":"open suspend override fun reset()","description":"org.knio.core.io.KStringReader.reset","location":"knio-core/org.knio.core.io/-k-string-reader/reset.html","searchKeys":["reset","open suspend override fun reset()","org.knio.core.io.KStringReader.reset"]},{"name":"open suspend override fun skip(n: Long): Long","description":"org.knio.core.io.KBufferedReader.skip","location":"knio-core/org.knio.core.io/-k-buffered-reader/skip.html","searchKeys":["skip","open suspend override fun skip(n: Long): Long","org.knio.core.io.KBufferedReader.skip"]},{"name":"open suspend override fun skip(n: Long): Long","description":"org.knio.core.io.KFileInputStream.skip","location":"knio-core/org.knio.core.io/-k-file-input-stream/skip.html","searchKeys":["skip","open suspend override fun skip(n: Long): Long","org.knio.core.io.KFileInputStream.skip"]},{"name":"open suspend override fun skip(ns: Long): Long","description":"org.knio.core.io.KStringReader.skip","location":"knio-core/org.knio.core.io/-k-string-reader/skip.html","searchKeys":["skip","open suspend override fun skip(ns: Long): Long","org.knio.core.io.KStringReader.skip"]},{"name":"open suspend override fun write(b: ByteBuffer)","description":"org.knio.core.io.KFileOutputStream.write","location":"knio-core/org.knio.core.io/-k-file-output-stream/write.html","searchKeys":["write","open suspend override fun write(b: ByteBuffer)","org.knio.core.io.KFileOutputStream.write"]},{"name":"suspend fun AsynchronousFileChannel.readSuspend(dst: ByteBuffer, position: Long): Int","description":"org.knio.core.nio.readSuspend","location":"knio-core/org.knio.core.nio/read-suspend.html","searchKeys":["readSuspend","suspend fun AsynchronousFileChannel.readSuspend(dst: ByteBuffer, position: Long): Int","org.knio.core.nio.readSuspend"]},{"name":"suspend fun AsynchronousFileChannel.writeSuspend(src: ByteBuffer, position: Long): Int","description":"org.knio.core.nio.writeSuspend","location":"knio-core/org.knio.core.nio/write-suspend.html","searchKeys":["writeSuspend","suspend fun AsynchronousFileChannel.writeSuspend(src: ByteBuffer, position: Long): Int","org.knio.core.nio.writeSuspend"]},{"name":"suspend fun AsynchronousServerSocketChannel.acceptSuspend(timeout: Long? = null): AsynchronousSocketChannel","description":"org.knio.core.nio.acceptSuspend","location":"knio-core/org.knio.core.nio/accept-suspend.html","searchKeys":["acceptSuspend","suspend fun AsynchronousServerSocketChannel.acceptSuspend(timeout: Long? = null): AsynchronousSocketChannel","org.knio.core.nio.acceptSuspend"]},{"name":"suspend fun AsynchronousSocketChannel.readSuspend(b: ByteBuffer, timeout: Long? = null): Int","description":"org.knio.core.nio.readSuspend","location":"knio-core/org.knio.core.nio/read-suspend.html","searchKeys":["readSuspend","suspend fun AsynchronousSocketChannel.readSuspend(b: ByteBuffer, timeout: Long? = null): Int","org.knio.core.nio.readSuspend"]},{"name":"suspend fun AsynchronousSocketChannel.writeSuspend(b: ByteBuffer, timeout: Long? = null): Int","description":"org.knio.core.nio.writeSuspend","location":"knio-core/org.knio.core.nio/write-suspend.html","searchKeys":["writeSuspend","suspend fun AsynchronousSocketChannel.writeSuspend(b: ByteBuffer, timeout: Long? = null): Int","org.knio.core.nio.writeSuspend"]},{"name":"suspend fun ByteArray.knioInputStream(): KByteArrayInputStream","description":"org.knio.core.lang.knioInputStream","location":"knio-core/org.knio.core.lang/knio-input-stream.html","searchKeys":["knioInputStream","suspend fun ByteArray.knioInputStream(): KByteArrayInputStream","org.knio.core.lang.knioInputStream"]},{"name":"suspend fun File.knioInputStream(): KInputStream","description":"org.knio.core.io.knioInputStream","location":"knio-core/org.knio.core.io/knio-input-stream.html","searchKeys":["knioInputStream","suspend fun File.knioInputStream(): KInputStream","org.knio.core.io.knioInputStream"]},{"name":"suspend fun File.knioOutputStream(): KOutputStream","description":"org.knio.core.io.knioOutputStream","location":"knio-core/org.knio.core.io/knio-output-stream.html","searchKeys":["knioOutputStream","suspend fun File.knioOutputStream(): KOutputStream","org.knio.core.io.knioOutputStream"]},{"name":"suspend fun File.md5(): String","description":"org.knio.core.io.md5","location":"knio-core/org.knio.core.io/md5.html","searchKeys":["md5","suspend fun File.md5(): String","org.knio.core.io.md5"]},{"name":"suspend fun KInputStream.bufferedReader(): KBufferedReader","description":"org.knio.core.io.bufferedReader","location":"knio-core/org.knio.core.io/buffered-reader.html","searchKeys":["bufferedReader","suspend fun KInputStream.bufferedReader(): KBufferedReader","org.knio.core.io.bufferedReader"]},{"name":"suspend fun KInputStream.copyTo(output: KOutputStream, bufferSize: Int = DEFAULT_BUFFER_SIZE): Long","description":"org.knio.core.io.copyTo","location":"knio-core/org.knio.core.io/copy-to.html","searchKeys":["copyTo","suspend fun KInputStream.copyTo(output: KOutputStream, bufferSize: Int = DEFAULT_BUFFER_SIZE): Long","org.knio.core.io.copyTo"]},{"name":"suspend fun KInputStream.copyTo(output: OutputStream, bufferSize: Int = DEFAULT_BUFFER_SIZE): Long","description":"org.knio.core.io.copyTo","location":"knio-core/org.knio.core.io/copy-to.html","searchKeys":["copyTo","suspend fun KInputStream.copyTo(output: OutputStream, bufferSize: Int = DEFAULT_BUFFER_SIZE): Long","org.knio.core.io.copyTo"]},{"name":"suspend fun KInputStream.reader(charset: Charset = Charsets.UTF_8): KInputStreamReader","description":"org.knio.core.io.reader","location":"knio-core/org.knio.core.io/reader.html","searchKeys":["reader","suspend fun KInputStream.reader(charset: Charset = Charsets.UTF_8): KInputStreamReader","org.knio.core.io.reader"]},{"name":"suspend fun KReader.buffered(bufferSize: Int? = null): KBufferedReader","description":"org.knio.core.io.buffered","location":"knio-core/org.knio.core.io/buffered.html","searchKeys":["buffered","suspend fun KReader.buffered(bufferSize: Int? = null): KBufferedReader","org.knio.core.io.buffered"]},{"name":"suspend fun KReader.readText(): String","description":"org.knio.core.io.readText","location":"knio-core/org.knio.core.io/read-text.html","searchKeys":["readText","suspend fun KReader.readText(): String","org.knio.core.io.readText"]},{"name":"suspend fun MessageDigest.update(inputStream: KInputStream)","description":"org.knio.core.security.update","location":"knio-core/org.knio.core.security/update.html","searchKeys":["update","suspend fun MessageDigest.update(inputStream: KInputStream)","org.knio.core.security.update"]},{"name":"suspend fun Path.knioInputStream(): KInputStream","description":"org.knio.core.nio.knioInputStream","location":"knio-core/org.knio.core.nio/knio-input-stream.html","searchKeys":["knioInputStream","suspend fun Path.knioInputStream(): KInputStream","org.knio.core.nio.knioInputStream"]},{"name":"suspend fun Path.knioOutputStream(): KOutputStream","description":"org.knio.core.nio.knioOutputStream","location":"knio-core/org.knio.core.nio/knio-output-stream.html","searchKeys":["knioOutputStream","suspend fun Path.knioOutputStream(): KOutputStream","org.knio.core.nio.knioOutputStream"]},{"name":"suspend fun Path.md5(): String","description":"org.knio.core.nio.md5","location":"knio-core/org.knio.core.nio/md5.html","searchKeys":["md5","suspend fun Path.md5(): String","org.knio.core.nio.md5"]},{"name":"suspend fun SSLContext.getKnioSSLServerSocketFactory(): KSSLServerSocketFactory","description":"org.knio.core.net.ssl.getKnioSSLServerSocketFactory","location":"knio-core/org.knio.core.net.ssl/get-knio-s-s-l-server-socket-factory.html","searchKeys":["getKnioSSLServerSocketFactory","suspend fun SSLContext.getKnioSSLServerSocketFactory(): KSSLServerSocketFactory","org.knio.core.net.ssl.getKnioSSLServerSocketFactory"]},{"name":"suspend fun SSLContext.getKnioSSLSocketFactory(): KSSLSocketFactory","description":"org.knio.core.net.ssl.getKnioSSLSocketFactory","location":"knio-core/org.knio.core.net.ssl/get-knio-s-s-l-socket-factory.html","searchKeys":["getKnioSSLSocketFactory","suspend fun SSLContext.getKnioSSLSocketFactory(): KSSLSocketFactory","org.knio.core.net.ssl.getKnioSSLSocketFactory"]},{"name":"suspend fun String.knioReader(): KReader","description":"org.knio.core.lang.knioReader","location":"knio-core/org.knio.core.lang/knio-reader.html","searchKeys":["knioReader","suspend fun String.knioReader(): KReader","org.knio.core.lang.knioReader"]},{"name":"suspend fun getDefault(): KSSLServerSocketFactory","description":"org.knio.core.net.ssl.KSSLServerSocketFactory.Companion.getDefault","location":"knio-core/org.knio.core.net.ssl/-k-s-s-l-server-socket-factory/-companion/get-default.html","searchKeys":["getDefault","suspend fun getDefault(): KSSLServerSocketFactory","org.knio.core.net.ssl.KSSLServerSocketFactory.Companion.getDefault"]},{"name":"suspend fun getDefault(): KSSLSocketFactory","description":"org.knio.core.net.ssl.KSSLSocketFactory.Companion.getDefault","location":"knio-core/org.knio.core.net.ssl/-k-s-s-l-socket-factory/-companion/get-default.html","searchKeys":["getDefault","suspend fun getDefault(): KSSLSocketFactory","org.knio.core.net.ssl.KSSLSocketFactory.Companion.getDefault"]},{"name":"suspend fun getDefault(): KServerSocketFactory","description":"org.knio.core.net.KServerSocketFactory.Companion.getDefault","location":"knio-core/org.knio.core.net/-k-server-socket-factory/-companion/get-default.html","searchKeys":["getDefault","suspend fun getDefault(): KServerSocketFactory","org.knio.core.net.KServerSocketFactory.Companion.getDefault"]},{"name":"suspend fun getDefault(): KSocketFactory","description":"org.knio.core.net.KSocketFactory.Companion.getDefault","location":"knio-core/org.knio.core.net/-k-socket-factory/-companion/get-default.html","searchKeys":["getDefault","suspend fun getDefault(): KSocketFactory","org.knio.core.net.KSocketFactory.Companion.getDefault"]},{"name":"suspend fun open(data: ByteArray): KByteArrayInputStream","description":"org.knio.core.io.KByteArrayInputStream.Companion.open","location":"knio-core/org.knio.core.io/-k-byte-array-input-stream/-companion/open.html","searchKeys":["open","suspend fun open(data: ByteArray): KByteArrayInputStream","org.knio.core.io.KByteArrayInputStream.Companion.open"]},{"name":"suspend fun open(inputStream: KInputStream, charset: Charset = Charsets.UTF_8): KInputStreamReader","description":"org.knio.core.io.KInputStreamReader.Companion.open","location":"knio-core/org.knio.core.io/-k-input-stream-reader/-companion/open.html","searchKeys":["open","suspend fun open(inputStream: KInputStream, charset: Charset = Charsets.UTF_8): KInputStreamReader","org.knio.core.io.KInputStreamReader.Companion.open"]},{"name":"suspend fun open(path: Path): KFileInputStream","description":"org.knio.core.io.KFileInputStream.Companion.open","location":"knio-core/org.knio.core.io/-k-file-input-stream/-companion/open.html","searchKeys":["open","suspend fun open(path: Path): KFileInputStream","org.knio.core.io.KFileInputStream.Companion.open"]},{"name":"suspend fun open(path: Path): KFileOutputStream","description":"org.knio.core.io.KFileOutputStream.Companion.open","location":"knio-core/org.knio.core.io/-k-file-output-stream/-companion/open.html","searchKeys":["open","suspend fun open(path: Path): KFileOutputStream","org.knio.core.io.KFileOutputStream.Companion.open"]},{"name":"suspend fun open(path: String): KFileInputStream","description":"org.knio.core.io.KFileInputStream.Companion.open","location":"knio-core/org.knio.core.io/-k-file-input-stream/-companion/open.html","searchKeys":["open","suspend fun open(path: String): KFileInputStream","org.knio.core.io.KFileInputStream.Companion.open"]},{"name":"suspend fun open(reader: KReader, bufferSize: Int? = null): KBufferedReader","description":"org.knio.core.io.KBufferedReader.Companion.open","location":"knio-core/org.knio.core.io/-k-buffered-reader/-companion/open.html","searchKeys":["open","suspend fun open(reader: KReader, bufferSize: Int? = null): KBufferedReader","org.knio.core.io.KBufferedReader.Companion.open"]},{"name":"suspend fun open(str: String): KStringReader","description":"org.knio.core.io.KStringReader.Companion.open","location":"knio-core/org.knio.core.io/-k-string-reader/-companion/open.html","searchKeys":["open","suspend fun open(str: String): KStringReader","org.knio.core.io.KStringReader.Companion.open"]},{"name":"suspend fun readLine(): String?","description":"org.knio.core.io.KBufferedReader.readLine","location":"knio-core/org.knio.core.io/-k-buffered-reader/read-line.html","searchKeys":["readLine","suspend fun readLine(): String?","org.knio.core.io.KBufferedReader.readLine"]},{"name":"suspend fun size(): Long","description":"org.knio.core.io.KFileInputStream.size","location":"knio-core/org.knio.core.io/-k-file-input-stream/size.html","searchKeys":["size","suspend fun size(): Long","org.knio.core.io.KFileInputStream.size"]},{"name":"val byteBufferPool: ByteBufferPool","description":"org.knio.core.context.KnioContext.byteBufferPool","location":"knio-core/org.knio.core.context/-knio-context/byte-buffer-pool.html","searchKeys":["byteBufferPool","val byteBufferPool: ByteBufferPool","org.knio.core.context.KnioContext.byteBufferPool"]},{"name":"val channelFactory: ChannelFactory","description":"org.knio.core.context.KnioContext.channelFactory","location":"knio-core/org.knio.core.context/-knio-context/channel-factory.html","searchKeys":["channelFactory","val channelFactory: ChannelFactory","org.knio.core.context.KnioContext.channelFactory"]},{"name":"val encoding: String","description":"org.knio.core.io.KInputStreamReader.encoding","location":"knio-core/org.knio.core.io/-k-input-stream-reader/encoding.html","searchKeys":["encoding","val encoding: String","org.knio.core.io.KInputStreamReader.encoding"]},{"name":"val maxStreamBufferSize: Int","description":"org.knio.core.context.KnioContext.maxStreamBufferSize","location":"knio-core/org.knio.core.context/-knio-context/max-stream-buffer-size.html","searchKeys":["maxStreamBufferSize","val maxStreamBufferSize: Int","org.knio.core.context.KnioContext.maxStreamBufferSize"]},{"name":"val maxTaskBufferSize: Int","description":"org.knio.core.context.KnioContext.maxTaskBufferSize","location":"knio-core/org.knio.core.context/-knio-context/max-task-buffer-size.html","searchKeys":["maxTaskBufferSize","val maxTaskBufferSize: Int","org.knio.core.context.KnioContext.maxTaskBufferSize"]}]